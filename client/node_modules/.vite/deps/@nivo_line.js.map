{
  "version": 3,
  "sources": ["../../lodash/noop.js", "../../lodash/_createSet.js", "../../lodash/_baseUniq.js", "../../lodash/uniq.js", "../../lodash/_baseIsMatch.js", "../../lodash/_isStrictComparable.js", "../../lodash/_getMatchData.js", "../../lodash/_matchesStrictComparable.js", "../../lodash/_baseMatches.js", "../../lodash/_baseMatchesProperty.js", "../../lodash/_baseProperty.js", "../../lodash/_basePropertyDeep.js", "../../lodash/property.js", "../../lodash/_baseIteratee.js", "../../lodash/uniqBy.js", "../../lodash/_baseForOwn.js", "../../lodash/_createBaseEach.js", "../../lodash/_baseEach.js", "../../lodash/_baseMap.js", "../../lodash/_baseSortBy.js", "../../lodash/_compareAscending.js", "../../lodash/_compareMultiple.js", "../../lodash/_baseOrderBy.js", "../../lodash/sortBy.js", "../../lodash/_baseIsDate.js", "../../lodash/isDate.js", "../../@nivo/scales/src/timeHelpers.ts", "../../@nivo/scales/src/linearScale.ts", "../../@nivo/scales/src/pointScale.ts", "../../@nivo/scales/src/bandScale.ts", "../../@nivo/scales/src/timeScale.ts", "../../@nivo/scales/src/logScale.ts", "../../@nivo/scales/src/symlogScale.ts", "../../@nivo/scales/src/compute.ts", "../../@nivo/scales/src/ticks.ts", "../../@nivo/axes/src/compute.ts", "../../@nivo/axes/src/components/AxisTick.tsx", "../../@nivo/axes/src/components/Axis.tsx", "../../@nivo/axes/src/props.ts", "../../@nivo/axes/src/components/Axes.tsx", "../../@nivo/axes/src/components/GridLine.tsx", "../../@nivo/axes/src/components/GridLines.tsx", "../../@nivo/axes/src/components/Grid.tsx", "../../@nivo/axes/src/canvas.ts", "../../delaunator/index.js", "../../d3-delaunay/src/path.js", "../../d3-delaunay/src/polygon.js", "../../d3-delaunay/src/voronoi.js", "../../d3-delaunay/src/delaunay.js", "../../@nivo/voronoi/src/props.ts", "../../@nivo/voronoi/src/computeMesh.ts", "../../@nivo/voronoi/src/hooks.ts", "../../@nivo/voronoi/src/Voronoi.tsx", "../../@nivo/voronoi/src/ResponsiveVoronoi.tsx", "../../@nivo/voronoi/src/Mesh.tsx", "../../@nivo/voronoi/src/meshCanvas.ts", "../../@nivo/line/src/PointTooltip.js", "../../@nivo/line/src/SliceTooltip.js", "../../@nivo/line/src/props.js", "../../@nivo/line/src/hooks.js", "../../@nivo/line/src/Areas.js", "../../@nivo/line/src/LinesItem.js", "../../@nivo/line/src/Lines.js", "../../@nivo/line/src/SlicesItem.js", "../../@nivo/line/src/Slices.js", "../../@nivo/line/src/Points.js", "../../@nivo/line/src/Mesh.js", "../../@nivo/line/src/Line.js", "../../@nivo/line/src/ResponsiveLine.js", "../../@nivo/line/src/LineCanvas.js", "../../@nivo/line/src/ResponsiveLineCanvas.js"],
  "sourcesContent": ["/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n", "var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n", "var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n", "var baseUniq = require('./_baseUniq');\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nmodule.exports = uniq;\n", "var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n", "var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n", "var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n", "/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n", "var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n", "var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n", "/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n", "var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n", "var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n", "var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n", "var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n", "var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n", "var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n", "var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n", "var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n", "/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n", "var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n", "var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n", "var arrayMap = require('./_arrayMap'),\n    baseGet = require('./_baseGet'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n", "var baseFlatten = require('./_baseFlatten'),\n    baseOrderBy = require('./_baseOrderBy'),\n    baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nmodule.exports = sortBy;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar dateTag = '[object Date]';\n\n/**\n * The base implementation of `_.isDate` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n */\nfunction baseIsDate(value) {\n  return isObjectLike(value) && baseGetTag(value) == dateTag;\n}\n\nmodule.exports = baseIsDate;\n", "var baseIsDate = require('./_baseIsDate'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsDate = nodeUtil && nodeUtil.isDate;\n\n/**\n * Checks if `value` is classified as a `Date` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n * @example\n *\n * _.isDate(new Date);\n * // => true\n *\n * _.isDate('Mon April 23 2012');\n * // => false\n */\nvar isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\nmodule.exports = isDate;\n", "import { timeParse, utcParse } from 'd3-time-format'\n\nexport const timePrecisions = [\n    'millisecond',\n    'second',\n    'minute',\n    'hour',\n    'day',\n    'month',\n    'year',\n] as const\n\nexport type TIME_PRECISION = (typeof timePrecisions)[number]\n\nexport const precisionCutOffs: ((date: Date) => void)[] = [\n    date => date.setMilliseconds(0),\n    date => date.setSeconds(0),\n    date => date.setMinutes(0),\n    date => date.setHours(0),\n    date => date.setDate(1),\n    date => date.setMonth(0),\n]\n\nexport const precisionCutOffsByType: Record<TIME_PRECISION, ((date: Date) => void)[]> = {\n    millisecond: [],\n    second: precisionCutOffs.slice(0, 1),\n    minute: precisionCutOffs.slice(0, 2),\n    hour: precisionCutOffs.slice(0, 3),\n    day: precisionCutOffs.slice(0, 4),\n    month: precisionCutOffs.slice(0, 5),\n    year: precisionCutOffs.slice(0, 6),\n}\n\nexport const createPrecisionMethod = (precision: TIME_PRECISION) => (date: Date) => {\n    precisionCutOffsByType[precision].forEach(cutOff => {\n        cutOff(date)\n    })\n\n    return date\n}\n\nexport const createDateNormalizer = ({\n    format = 'native',\n    precision = 'millisecond',\n    useUTC = true,\n}: {\n    format?: 'native' | string\n    precision?: TIME_PRECISION\n    useUTC?: boolean\n}) => {\n    const precisionFn = createPrecisionMethod(precision)\n\n    return (value: Date | string | undefined) => {\n        if (value === undefined) {\n            return value\n        }\n\n        if (format === 'native' || value instanceof Date) {\n            return precisionFn(value as Date)\n        }\n\n        const parseTime = useUTC ? utcParse(format) : timeParse(format)\n        return precisionFn(parseTime(value as string) as Date)\n    }\n}\n", "import { NumberValue, scaleLinear, ScaleLinear as D3ScaleLinear } from 'd3-scale'\nimport { ScaleLinearSpec, ScaleLinear, ComputedSerieAxis, ScaleAxis } from './types'\n\nexport const createLinearScale = <Output extends NumberValue>(\n    {\n        min = 0,\n        max = 'auto',\n        stacked = false,\n        reverse = false,\n        clamp = false,\n        nice = false,\n    }: ScaleLinearSpec,\n    data: ComputedSerieAxis<Output>,\n    size: number,\n    axis: ScaleAxis\n) => {\n    let minValue: NumberValue\n    if (min === 'auto') {\n        minValue = stacked === true ? data.minStacked ?? 0 : data.min\n    } else {\n        minValue = min\n    }\n\n    let maxValue: NumberValue\n    if (max === 'auto') {\n        maxValue = stacked === true ? data.maxStacked ?? 0 : data.max\n    } else {\n        maxValue = max\n    }\n\n    const scale = scaleLinear<number, Output>()\n        .rangeRound(axis === 'x' ? [0, size] : [size, 0])\n        .domain(reverse ? [maxValue, minValue] : [minValue, maxValue])\n        .clamp(clamp)\n\n    if (nice === true) scale.nice()\n    else if (typeof nice === 'number') scale.nice(nice)\n\n    return castLinearScale<number, Output>(scale, stacked)\n}\n\nexport const castLinearScale = <Range, Output>(\n    scale: D3ScaleLinear<Range, Output>,\n    stacked = false\n) => {\n    const typedScale = scale as unknown as ScaleLinear<number>\n    typedScale.type = 'linear'\n    typedScale.stacked = stacked\n\n    return typedScale\n}\n", "import { scalePoint, ScalePoint as D3ScalePoint } from 'd3-scale'\nimport { ComputedSerieAxis, ScalePoint, ScalePointSpec, StringValue } from './types'\n\nexport const createPointScale = <Input extends StringValue>(\n    _spec: ScalePointSpec,\n    data: ComputedSerieAxis<Input>,\n    size: number\n) => {\n    const scale = scalePoint<Input>().range([0, size]).domain(data.all)\n\n    const typedScale = scale as ScalePoint<Input>\n    typedScale.type = 'point'\n\n    return typedScale\n}\n\nexport const castPointScale = <Input extends StringValue>(scale: D3ScalePoint<Input>) => {\n    const typedScale = scale as ScalePoint<Input>\n    typedScale.type = 'point'\n\n    return typedScale\n}\n", "import { scaleBand, ScaleBand as D3ScaleBand } from 'd3-scale'\nimport { ComputedSerieAxis, ScaleBand, ScaleBandSpec, StringValue, ScaleAxis } from './types'\n\nexport const createBandScale = <Input extends StringValue>(\n    { round = true }: ScaleBandSpec,\n    data: ComputedSerieAxis<Input>,\n    size: number,\n    axis: ScaleAxis\n) => {\n    const scale = scaleBand<Input>()\n        .range(axis === 'x' ? [0, size] : [size, 0])\n        .domain(data.all)\n        .round(round)\n\n    return castBandScale<Input>(scale)\n}\n\nexport const castBandScale = <Input extends StringValue>(scale: D3ScaleBand<Input>) => {\n    const typedScale = scale as ScaleBand<Input>\n    typedScale.type = 'band'\n\n    return typedScale\n}\n", "import { NumberValue, scaleTime, scaleUtc } from 'd3-scale'\nimport { createDateNormalizer } from './timeHelpers'\nimport { ComputedSerieAxis, ScaleTime, ScaleTimeSpec } from './types'\n\nexport const createTimeScale = <Input extends Date | NumberValue>(\n    {\n        format = 'native',\n        precision = 'millisecond',\n        min = 'auto',\n        max = 'auto',\n        useUTC = true,\n        nice = false,\n    }: ScaleTimeSpec,\n    data: ComputedSerieAxis<string | Date>,\n    size: number\n) => {\n    const normalize = createDateNormalizer({ format, precision, useUTC })\n\n    let minValue: Date | undefined\n    if (min === 'auto') {\n        minValue = normalize(data.min)\n    } else if (format !== 'native') {\n        minValue = normalize(min)\n    } else {\n        minValue = min as Date\n    }\n\n    let maxValue: Date | undefined\n    if (max === 'auto') {\n        maxValue = normalize(data.max)\n    } else if (format !== 'native') {\n        maxValue = normalize(max)\n    } else {\n        maxValue = max as Date\n    }\n\n    const scale = useUTC ? scaleUtc() : scaleTime()\n\n    scale.range([0, size])\n\n    if (minValue && maxValue) scale.domain([minValue, maxValue])\n\n    if (nice === true) scale.nice()\n    else if (typeof nice === 'object' || typeof nice === 'number') scale.nice(nice)\n\n    const typedScale = scale as unknown as ScaleTime<Input>\n\n    typedScale.type = 'time'\n    typedScale.useUTC = useUTC\n\n    return typedScale\n}\n", "import { scaleLog } from 'd3-scale'\nimport { ComputedSerieAxis, ScaleAxis, ScaleLog, ScaleLogSpec } from './types'\n\nexport const createLogScale = (\n    { base = 10, min = 'auto', max = 'auto' }: ScaleLogSpec,\n    data: ComputedSerieAxis<number>,\n    size: number,\n    axis: ScaleAxis\n) => {\n    const hasZero = data.all.some(v => v === 0)\n    if (hasZero) {\n        throw new Error(`a log scale domain must not include or cross zero`)\n    }\n\n    let sign: number\n    let hasMixedSign = false\n    data.all\n        .filter(v => v != null)\n        .forEach(v => {\n            if (hasMixedSign) return\n            if (sign === undefined) {\n                sign = Math.sign(v)\n            } else if (Math.sign(v) !== sign) {\n                hasMixedSign = true\n            }\n        })\n\n    if (hasMixedSign) {\n        throw new Error(`a log scale domain must be strictly-positive or strictly-negative`)\n    }\n\n    let minValue: number\n    if (min === 'auto') {\n        minValue = data.min\n    } else {\n        minValue = min\n    }\n\n    let maxValue: number\n    if (max === 'auto') {\n        maxValue = data.max\n    } else {\n        maxValue = max\n    }\n\n    const scale = scaleLog<number, number>()\n        .domain([minValue, maxValue])\n        .rangeRound(axis === 'x' ? [0, size] : [size, 0])\n        .base(base)\n        .nice()\n\n    const typedScale = scale as ScaleLog\n    typedScale.type = 'log'\n\n    return typedScale\n}\n", "import { scaleSymlog } from 'd3-scale'\nimport { ComputedSerieAxis, ScaleAxis, ScaleSymlog, ScaleSymlogSpec } from './types'\n\nexport const createSymlogScale = (\n    { constant = 1, min = 'auto', max = 'auto', reverse = false }: ScaleSymlogSpec,\n    data: ComputedSerieAxis<number>,\n    size: number,\n    axis: ScaleAxis\n) => {\n    let minValue: number\n    if (min === 'auto') {\n        minValue = data.min\n    } else {\n        minValue = min\n    }\n\n    let maxValue: number\n    if (max === 'auto') {\n        maxValue = data.max\n    } else {\n        maxValue = max\n    }\n\n    const scale = scaleSymlog<number, number>()\n        .constant(constant)\n        .rangeRound(axis === 'x' ? [0, size] : [size, 0])\n        .nice()\n\n    if (reverse === true) scale.domain([maxValue, minValue])\n    else scale.domain([minValue, maxValue])\n\n    const typedScale = scale as ScaleSymlog\n    typedScale.type = 'symlog'\n\n    return typedScale\n}\n", "import uniq from 'lodash/uniq'\nimport uniqBy from 'lodash/uniqBy'\nimport sortBy from 'lodash/sortBy'\nimport last from 'lodash/last'\nimport isDate from 'lodash/isDate'\nimport { createDateNormalizer } from './timeHelpers'\nimport { ScaleAxis, ScaleSpec, ScaleValue, SerieAxis, ComputedSerieAxis } from './types'\nimport { createLinearScale } from './linearScale'\nimport { createPointScale } from './pointScale'\nimport { createBandScale } from './bandScale'\nimport { createTimeScale } from './timeScale'\nimport { createLogScale } from './logScale'\nimport { createSymlogScale } from './symlogScale'\n\ntype XY = ReturnType<typeof generateSeriesXY>\n\ntype StackedXY = {\n    [K in keyof XY]: XY[K] & {\n        maxStacked: number\n        minStacked: number\n    }\n}\n\ninterface SerieDatum {\n    x: number | string | Date\n    // only numbers can be stacked\n    xStacked?: number | null\n    y: number | string | Date\n    // only numbers can be stacked\n    yStacked?: number | null\n}\n\ntype Serie<S = never, D extends SerieDatum = SerieDatum> = S & {\n    data: D[]\n}\n\ntype NestedSerie<S = never, D extends SerieDatum = SerieDatum> = S & {\n    data: {\n        data: D\n    }[]\n}\n\nexport type ComputedSerie<S = never, D extends SerieDatum = SerieDatum> = S & {\n    data: {\n        data: D\n        position: {\n            x: number | null\n            y: number | null\n        }\n    }[]\n}\n\ntype Compare = <T>(a: T, b: T) => boolean\n\nexport const getOtherAxis = (axis: ScaleAxis): ScaleAxis => (axis === 'x' ? 'y' : 'x')\n\nexport const compareValues = (a: string | number, b: string | number) => a === b\nexport const compareDateValues = (a: Date, b: Date) => a.getTime() === b.getTime()\n\nexport function computeScale<Input extends ScaleValue>(\n    spec: ScaleSpec,\n    data: ComputedSerieAxis<any>,\n    size: number,\n    axis: ScaleAxis\n) {\n    switch (spec.type) {\n        case 'linear':\n            return createLinearScale(spec, data, size, axis)\n        case 'point':\n            return createPointScale<Input>(spec, data, size)\n        case 'band':\n            return createBandScale<Input>(spec, data, size, axis)\n        case 'time':\n            return createTimeScale(spec, data, size)\n        case 'log':\n            return createLogScale(spec, data, size, axis)\n        case 'symlog':\n            return createSymlogScale(spec, data, size, axis)\n        default:\n            throw new Error('invalid scale spec')\n    }\n}\n\n/**\n * Convert serie data to have the original data stored in a nested prop.\n *\n * We do this in order to avoid conflicts between raw & computed properties.\n * <- { data: { x: 1, y: 3 }[] }\n * -> { data: { data: { x: 1, y: 3 } }[] }\n */\nconst nestSerieData = <S = never, D extends SerieDatum = SerieDatum>(\n    serie: Serie<S, D>\n): NestedSerie<S, D> => ({\n    ...serie,\n    data: serie.data.map(d => ({ data: { ...d } })),\n})\n\nconst getDatumAxisPosition = <D extends SerieDatum = SerieDatum>(\n    datum: { data: D },\n    axis: ScaleAxis,\n    scale: any\n): number | null => {\n    if ('stacked' in scale && scale.stacked) {\n        const stackedValue = datum.data[axis === 'x' ? 'xStacked' : 'yStacked']\n        if (stackedValue === null || stackedValue === undefined) {\n            return null\n        }\n\n        return scale(stackedValue)\n    }\n\n    return scale(datum.data[axis]) ?? null\n}\n\n/**\n * Compute x/y d3 scales from an array of data series, and scale specifications.\n *\n * We use generics as it's not uncommon to have extra properties such as an id\n * added to the series, or extra props on data, in such case, you should override\n * the default types.\n */\nexport const computeXYScalesForSeries = <S = never, D extends SerieDatum = SerieDatum>(\n    series: Serie<S, D>[],\n    xScaleSpec: ScaleSpec,\n    yScaleSpec: ScaleSpec,\n    width: number,\n    height: number\n) => {\n    // first nest series to avoid property conflicts\n    const nestedSeries = series.map(serie => nestSerieData<S, D>(serie))\n\n    // then compute data for each axis: all, min, max values\n    const xy = generateSeriesXY<S, D>(nestedSeries, xScaleSpec, yScaleSpec)\n\n    // stack x values depending on xScale\n    if ('stacked' in xScaleSpec && xScaleSpec.stacked === true) {\n        stackX<S, D>(xy as StackedXY, nestedSeries)\n    }\n\n    // stack y values depending on yScale\n    if ('stacked' in yScaleSpec && yScaleSpec.stacked === true) {\n        stackY<S, D>(xy as StackedXY, nestedSeries)\n    }\n\n    // computes scales\n    const xScale = computeScale<D['x']>(xScaleSpec, xy.x, width, 'x')\n    const yScale = computeScale<D['y']>(yScaleSpec, xy.y, height, 'y')\n\n    // assign position to each datum in every scale\n    const computedSeries: ComputedSerie<S, D>[] = nestedSeries.map(serie => ({\n        ...serie,\n        data: serie.data.map(datum => ({\n            ...datum,\n            position: {\n                x: getDatumAxisPosition(datum, 'x', xScale),\n                y: getDatumAxisPosition(datum, 'y', yScale),\n            },\n        })),\n    }))\n\n    return {\n        ...xy,\n        series: computedSeries,\n        xScale,\n        yScale,\n    }\n}\n\nexport const generateSeriesXY = <S = never, D extends SerieDatum = SerieDatum>(\n    series: NestedSerie<S, D>[],\n    xScaleSpec: ScaleSpec,\n    yScaleSpec: ScaleSpec\n) => ({\n    x: generateSeriesAxis<'x', D['x']>(series, 'x', xScaleSpec),\n    y: generateSeriesAxis<'y', D['y']>(series, 'y', yScaleSpec),\n})\n\n/**\n * Normalize data according to scale type, (time => Date, linear => Number)\n * compute sorted unique values and min/max.\n */\nexport const generateSeriesAxis = <Axis extends ScaleAxis, Value extends ScaleValue>(\n    series: SerieAxis<Axis, Value>,\n    axis: Axis,\n    scaleSpec: ScaleSpec,\n    {\n        getValue = d => d.data[axis],\n        setValue = (d, v) => {\n            d.data[axis] = v\n        },\n    }: {\n        getValue?: (d: { data: Record<Axis, Value | null> }) => Value | null\n        setValue?: (d: { data: Record<Axis, Value | null> }, v: Value) => void\n    } = {}\n) => {\n    if (scaleSpec.type === 'linear') {\n        series.forEach(serie => {\n            serie.data.forEach(d => {\n                const value = getValue(d)\n\n                if (value) {\n                    setValue(d, parseFloat(String(value)) as unknown as Value)\n                }\n            })\n        })\n    } else if (scaleSpec.type === 'time' && scaleSpec.format !== 'native') {\n        // `native` means we already have Date instances,\n        // otherwise we have to convert the values to Date.\n        const parseTime = createDateNormalizer(scaleSpec)\n\n        series.forEach(serie => {\n            serie.data.forEach(d => {\n                const value = getValue(d)\n\n                if (value) {\n                    setValue(d, parseTime(value as Date) as unknown as Value)\n                }\n            })\n        })\n    }\n\n    const values: unknown[] = []\n\n    series.forEach(serie => {\n        serie.data.forEach(d => {\n            values.push(getValue(d))\n        })\n    })\n\n    switch (scaleSpec.type) {\n        case 'linear': {\n            const all = sortBy(\n                // filer null values to deal with holes in linechart\n                uniq(values as number[]).filter(v => v !== null),\n                v => v\n            )\n\n            return { all, min: Math.min(...all), max: Math.max(...all) }\n        }\n        case 'time': {\n            const all = uniqBy(values as Date[], v => v.getTime())\n                .slice(0)\n                .sort((a, b) => b.getTime() - a.getTime())\n                .reverse()\n\n            return { all, min: all[0], max: last(all) }\n        }\n        default: {\n            const all = uniq(values)\n\n            return { all, min: all[0], max: last(all) }\n        }\n    }\n}\n\nexport const stackAxis = <S = never, D extends SerieDatum = SerieDatum>(\n    axis: ScaleAxis,\n    xy: StackedXY,\n    series: NestedSerie<S, D>[]\n) => {\n    const otherAxis = getOtherAxis(axis)\n    const all: number[] = []\n\n    xy[otherAxis].all.forEach(v => {\n        const compare = (isDate(v) ? compareDateValues : compareValues) as Compare\n        const stack: Array<number | null> = []\n\n        series.forEach(serie => {\n            const datum = serie.data.find(d => compare(d.data[otherAxis], v))\n            let value = null\n            let stackValue = null\n\n            if (datum !== undefined) {\n                // stacked values only support numbers\n                value = datum.data[axis] as number\n                if (value !== null) {\n                    const head = last(stack)\n                    if (head === undefined) {\n                        stackValue = value\n                    } else if (head !== null) {\n                        stackValue = head + value\n                    }\n                }\n\n                datum.data[axis === 'x' ? 'xStacked' : 'yStacked'] = stackValue\n            }\n\n            stack.push(stackValue)\n\n            if (stackValue !== null) {\n                all.push(stackValue)\n            }\n        })\n    })\n\n    xy[axis].minStacked = Math.min(...all)\n    xy[axis].maxStacked = Math.max(...all)\n}\n\nconst stackX = <S = never, D extends SerieDatum = SerieDatum>(\n    xy: StackedXY,\n    series: NestedSerie<S, D>[]\n) => stackAxis<S, D>('x', xy, series)\n\nconst stackY = <S = never, D extends SerieDatum = SerieDatum>(\n    xy: StackedXY,\n    series: NestedSerie<S, D>[]\n) => stackAxis<S, D>('y', xy, series)\n", "import {\n    CountableTimeInterval,\n    timeMillisecond,\n    utcMillisecond,\n    timeSecond,\n    utcSecond,\n    timeMinute,\n    utcMinute,\n    timeHour,\n    utcHour,\n    timeWeek,\n    utcWeek,\n    timeSunday,\n    utcSunday,\n    timeMonday,\n    utcMonday,\n    timeTuesday,\n    utcTuesday,\n    timeWednesday,\n    utcWednesday,\n    timeThursday,\n    utcThursday,\n    timeFriday,\n    utcFriday,\n    timeSaturday,\n    utcSaturday,\n    timeMonth,\n    utcMonth,\n    timeYear,\n    utcYear,\n    timeInterval,\n} from 'd3-time'\nimport { ScaleValue, TicksSpec, AnyScale, ScaleWithBandwidth } from './types'\n\nexport const centerScale = <Value>(scale: ScaleWithBandwidth) => {\n    const bandwidth = scale.bandwidth()\n\n    if (bandwidth === 0) return scale\n\n    let offset = bandwidth / 2\n    if (scale.round()) {\n        offset = Math.round(offset)\n    }\n\n    return <T extends Value>(d: T) => (scale(d) ?? 0) + offset\n}\n\nconst timeDay = timeInterval(\n    date => date.setHours(0, 0, 0, 0),\n    (date, step) => date.setDate(date.getDate() + step),\n    (start, end) => (end.getTime() - start.getTime()) / 864e5,\n    date => Math.floor(date.getTime() / 864e5)\n)\n\nconst utcDay = timeInterval(\n    date => date.setUTCHours(0, 0, 0, 0),\n    (date, step) => date.setUTCDate(date.getUTCDate() + step),\n    (start, end) => (end.getTime() - start.getTime()) / 864e5,\n    date => Math.floor(date.getTime() / 864e5)\n)\n\nconst timeByType: Record<string, [CountableTimeInterval, CountableTimeInterval]> = {\n    millisecond: [timeMillisecond, utcMillisecond],\n    second: [timeSecond, utcSecond],\n    minute: [timeMinute, utcMinute],\n    hour: [timeHour, utcHour],\n    day: [timeDay, utcDay],\n    week: [timeWeek, utcWeek],\n    sunday: [timeSunday, utcSunday],\n    monday: [timeMonday, utcMonday],\n    tuesday: [timeTuesday, utcTuesday],\n    wednesday: [timeWednesday, utcWednesday],\n    thursday: [timeThursday, utcThursday],\n    friday: [timeFriday, utcFriday],\n    saturday: [timeSaturday, utcSaturday],\n    month: [timeMonth, utcMonth],\n    year: [timeYear, utcYear],\n}\n\nconst timeTypes = Object.keys(timeByType)\nconst timeIntervalRegexp = new RegExp(`^every\\\\s*(\\\\d+)?\\\\s*(${timeTypes.join('|')})s?$`, 'i')\n\nconst isInteger = (value: unknown): value is number =>\n    typeof value === 'number' && isFinite(value) && Math.floor(value) === value\n\nexport const getScaleTicks = <Value extends ScaleValue>(\n    scale: AnyScale,\n    spec?: TicksSpec<Value>\n) => {\n    // specific values\n    if (Array.isArray(spec)) {\n        return spec\n    }\n\n    if (typeof spec === 'string' && 'useUTC' in scale) {\n        // time interval\n        const matches = spec.match(timeIntervalRegexp)\n\n        if (matches) {\n            const [, amount, type] = matches\n            // UTC is used as it's more predictable\n            // however local time could be used too\n            // let's see how it fits users' requirements\n            const timeType = timeByType[type][scale.useUTC ? 1 : 0]\n\n            if (type === 'day') {\n                const [start, originalStop] = scale.domain()\n                const stop = new Date(originalStop)\n\n                // Set range to include last day in the domain since `interval.range` function is exclusive stop\n                stop.setDate(stop.getDate() + 1)\n\n                return timeType.every(Number(amount ?? 1))?.range(start, stop) ?? []\n            }\n\n            if (amount === undefined) {\n                return scale.ticks(timeType)\n            }\n\n            const interval = timeType.every(Number(amount))\n\n            if (interval) {\n                return scale.ticks(interval)\n            }\n        }\n\n        throw new Error(`Invalid tickValues: ${spec}`)\n    }\n\n    // continuous scales\n    if ('ticks' in scale) {\n        // default behaviour\n        if (spec === undefined) {\n            return scale.ticks()\n        }\n\n        // specific tick count\n        if (isInteger(spec)) {\n            return scale.ticks(spec)\n        }\n    }\n\n    // non linear scale default\n    return scale.domain()\n}\n", "import { timeFormat } from 'd3-time-format'\nimport { format as d3Format } from 'd3-format'\n// @ts-ignore\nimport { textPropsByEngine } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec, getScaleTicks, centerScale } from '@nivo/scales'\nimport { Point, ValueFormatter, Line } from './types'\n\nconst isArray = <T>(value: unknown): value is T[] => Array.isArray(value)\n\nexport const computeCartesianTicks = <Value extends ScaleValue>({\n    axis,\n    scale,\n    ticksPosition,\n    tickValues,\n    tickSize,\n    tickPadding,\n    tickRotation,\n    truncateTickAt,\n    engine = 'svg',\n}: {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    ticksPosition?: 'after' | 'before'\n    tickValues?: TicksSpec<Value>\n    tickSize: number\n    tickPadding: number\n    tickRotation: number\n    truncateTickAt?: number\n    engine?: 'svg' | 'canvas'\n}) => {\n    const values = getScaleTicks<Value>(scale, tickValues)\n\n    const textProps = textPropsByEngine[engine]\n\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n    const line = { lineX: 0, lineY: 0 }\n    const text = { textX: 0, textY: 0 }\n\n    const isRTL = typeof document === 'object' ? document.dir === 'rtl' : false\n    let translate: (value: Value) => Point\n    let textAlign: CanvasTextAlign = textProps.align.center\n    let textBaseline: CanvasTextBaseline = textProps.baseline.center\n\n    if (axis === 'x') {\n        translate = d => ({ x: position(d) ?? 0, y: 0 })\n\n        line.lineY = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textY = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textBaseline = textProps.baseline.top\n        } else {\n            textBaseline = textProps.baseline.bottom\n        }\n\n        if (tickRotation === 0) {\n            textAlign = textProps.align.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation < 0) ||\n            (ticksPosition === 'before' && tickRotation > 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'left' : 'right']\n            textBaseline = textProps.baseline.center\n        } else if (\n            (ticksPosition === 'after' && tickRotation > 0) ||\n            (ticksPosition === 'before' && tickRotation < 0)\n        ) {\n            textAlign = textProps.align[isRTL ? 'right' : 'left']\n            textBaseline = textProps.baseline.center\n        }\n    } else {\n        translate = d => ({ x: 0, y: position(d) ?? 0 })\n\n        line.lineX = tickSize * (ticksPosition === 'after' ? 1 : -1)\n        text.textX = (tickSize + tickPadding) * (ticksPosition === 'after' ? 1 : -1)\n\n        if (ticksPosition === 'after') {\n            textAlign = textProps.align.left\n        } else {\n            textAlign = textProps.align.right\n        }\n    }\n\n    const truncateTick = (value: string) => {\n        const valueLength = String(value).length\n\n        if (truncateTickAt && truncateTickAt > 0 && valueLength > truncateTickAt) {\n            return `${String(value).slice(0, truncateTickAt).concat('...')}`\n        }\n        return `${value}`\n    }\n\n    const ticks = values.map((value: Value) => {\n        const processedValue =\n            typeof value === 'string' ? (truncateTick(value) as unknown as Value) : value\n        return {\n            key: value instanceof Date ? `${value.valueOf()}` : `${value}`,\n            value: processedValue,\n            ...translate(value),\n            ...line,\n            ...text,\n        }\n    })\n\n    return {\n        ticks,\n        textAlign,\n        textBaseline,\n    }\n}\n\nexport const getFormatter = <Value extends ScaleValue>(\n    format: string | ValueFormatter<Value> | undefined,\n    scale: AnyScale\n): ValueFormatter<Value> | undefined => {\n    if (typeof format === 'undefined' || typeof format === 'function') return format\n\n    if (scale.type === 'time') {\n        const formatter = timeFormat(format)\n\n        return ((d: any) => formatter(d instanceof Date ? d : new Date(d))) as ValueFormatter<Value>\n    }\n\n    return d3Format(format) as unknown as ValueFormatter<Value>\n}\n\nexport const computeGridLines = <Value extends ScaleValue>({\n    width,\n    height,\n    scale,\n    axis,\n    values: _values,\n}: {\n    width: number\n    height: number\n    scale: AnyScale\n    axis: 'x' | 'y'\n    values?: TicksSpec<Value>\n}) => {\n    const lineValues = isArray<number>(_values) ? _values : undefined\n    const values = lineValues || getScaleTicks<Value>(scale, _values)\n    const position = 'bandwidth' in scale ? centerScale(scale) : scale\n\n    const lines: Line[] =\n        axis === 'x'\n            ? values.map((value: Value) => ({\n                  key: value instanceof Date ? `${value.valueOf()}` : `${value}`,\n                  x1: position(value) ?? 0,\n                  x2: position(value) ?? 0,\n                  y1: 0,\n                  y2: height,\n              }))\n            : values.map((value: Value) => ({\n                  key: value instanceof Date ? `${value.valueOf()}` : `${value}`,\n                  x1: 0,\n                  x2: width,\n                  y1: position(value) ?? 0,\n                  y2: position(value) ?? 0,\n              }))\n\n    return lines\n}\n", "import { useMemo, memo } from 'react'\nimport * as React from 'react'\nimport { animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { ScaleValue } from '@nivo/scales'\nimport { AxisTickProps } from '../types'\n\nconst AxisTick = <Value extends ScaleValue>({\n    value: _value,\n    format,\n    lineX,\n    lineY,\n    onClick,\n    textBaseline,\n    textAnchor,\n    animatedProps,\n}: AxisTickProps<Value>) => {\n    const theme = useTheme()\n    const lineStyle = theme.axis.ticks.line\n    const textStyle = theme.axis.ticks.text\n\n    const value = format?.(_value) ?? _value\n\n    const props = useMemo(() => {\n        const style = { opacity: animatedProps.opacity }\n\n        if (!onClick) {\n            return { style }\n        }\n\n        return {\n            style: { ...style, cursor: 'pointer' },\n            onClick: (event: React.MouseEvent<SVGGElement, MouseEvent>) => onClick(event, value),\n        }\n    }, [animatedProps.opacity, onClick, value])\n\n    return (\n        <animated.g transform={animatedProps.transform} {...props}>\n            <line x1={0} x2={lineX} y1={0} y2={lineY} style={lineStyle} />\n            {textStyle.outlineWidth > 0 && (\n                <animated.text\n                    dominantBaseline={textBaseline}\n                    textAnchor={textAnchor}\n                    transform={animatedProps.textTransform}\n                    style={textStyle}\n                    strokeWidth={textStyle.outlineWidth * 2}\n                    stroke={textStyle.outlineColor}\n                    strokeLinejoin=\"round\"\n                >\n                    {`${value}`}\n                </animated.text>\n            )}\n            <animated.text\n                dominantBaseline={textBaseline}\n                textAnchor={textAnchor}\n                transform={animatedProps.textTransform}\n                style={textStyle}\n            >\n                {`${value}`}\n            </animated.text>\n        </animated.g>\n    )\n}\n\nconst memoizedAxisTick = memo(AxisTick) as typeof AxisTick\n\nexport { memoizedAxisTick as AxisTick }\n", "import { useMotionConfig, useTheme } from '@nivo/core'\nimport { AnyScale, ScaleValue } from '@nivo/scales'\nimport { animated, useSpring, useTransition } from '@react-spring/web'\nimport * as React from 'react'\nimport { memo, useCallback, useMemo } from 'react'\nimport { computeCartesianTicks, getFormatter } from '../compute'\nimport { AxisProps } from '../types'\nimport { AxisTick } from './AxisTick'\n\nexport const NonMemoizedAxis = <Value extends ScaleValue>({\n    axis,\n    scale,\n    x = 0,\n    y = 0,\n    length,\n    ticksPosition,\n    tickValues,\n    tickSize = 5,\n    tickPadding = 5,\n    tickRotation = 0,\n    format,\n    renderTick = AxisTick,\n    truncateTickAt,\n    legend,\n    legendPosition = 'end',\n    legendOffset = 0,\n    onClick,\n    ariaHidden,\n}: AxisProps<Value> & {\n    axis: 'x' | 'y'\n    scale: AnyScale\n    x?: number\n    y?: number\n    length: number\n    onClick?: (event: React.MouseEvent<SVGGElement, MouseEvent>, value: Value | string) => void\n}) => {\n    const theme = useTheme()\n    const legendTextStyle = theme.axis.legend.text\n\n    const formatValue = useMemo(() => getFormatter(format, scale), [format, scale])\n\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        truncateTickAt,\n    })\n\n    let legendNode = null\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAnchor\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAnchor = 'start'\n            } else if (legendPosition === 'middle') {\n                textAnchor = 'middle'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAnchor = 'end'\n                legendX = length\n            }\n        }\n\n        legendNode = (\n            <>\n                {legendTextStyle.outlineWidth > 0 && (\n                    <text\n                        transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                        textAnchor={textAnchor}\n                        style={{\n                            dominantBaseline: 'central',\n                            ...legendTextStyle,\n                        }}\n                        strokeWidth={legendTextStyle.outlineWidth * 2}\n                        stroke={legendTextStyle.outlineColor}\n                        strokeLinejoin=\"round\"\n                    >\n                        {legend}\n                    </text>\n                )}\n                <text\n                    transform={`translate(${legendX}, ${legendY}) rotate(${legendRotation})`}\n                    textAnchor={textAnchor}\n                    style={{\n                        dominantBaseline: 'central',\n                        ...legendTextStyle,\n                    }}\n                >\n                    {legend}\n                </text>\n            </>\n        )\n    }\n\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${x},${y})`,\n        lineX2: axis === 'x' ? length : 0,\n        lineY2: axis === 'x' ? 0 : length,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const getAnimatedProps = useCallback(\n        (tick: (typeof ticks)[0]) => {\n            return {\n                opacity: 1,\n                transform: `translate(${tick.x},${tick.y})`,\n                textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n            }\n        },\n        [tickRotation]\n    )\n    const getFromAnimatedProps = useCallback(\n        (tick: (typeof ticks)[0]) => ({\n            opacity: 0,\n            transform: `translate(${tick.x},${tick.y})`,\n            textTransform: `translate(${tick.textX},${tick.textY}) rotate(${tickRotation})`,\n        }),\n        [tickRotation]\n    )\n\n    const transition = useTransition<\n        (typeof ticks)[0],\n        { opacity: number; transform: string; textTransform: string }\n    >(ticks, {\n        keys: tick => tick.key,\n        initial: getAnimatedProps,\n        from: getFromAnimatedProps,\n        enter: getAnimatedProps,\n        update: getAnimatedProps,\n        leave: {\n            opacity: 0,\n        },\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} aria-hidden={ariaHidden}>\n            {transition((transitionProps, tick, _state, tickIndex) => {\n                return React.createElement(renderTick, {\n                    tickIndex,\n                    format: formatValue,\n                    rotate: tickRotation,\n                    textBaseline,\n                    textAnchor: textAlign,\n                    truncateTickAt: truncateTickAt,\n                    animatedProps: transitionProps,\n                    ...tick,\n                    ...(onClick ? { onClick } : {}),\n                })\n            })}\n            <animated.line\n                style={theme.axis.domain.line}\n                x1={0}\n                x2={animatedProps.lineX2}\n                y1={0}\n                y2={animatedProps.lineY2}\n            />\n            {legendNode}\n        </animated.g>\n    )\n}\n\nexport const Axis = memo(NonMemoizedAxis) as typeof NonMemoizedAxis\n", "import PropTypes from 'prop-types'\n\nexport const axisPropTypes = {\n    ticksPosition: PropTypes.oneOf(['before', 'after']),\n    tickValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n        PropTypes.string,\n    ]),\n    rotateOnTickLength: PropTypes.shape({\n        angle: PropTypes.number,\n        length: PropTypes.number,\n    }),\n    tickSize: PropTypes.number,\n    tickPadding: PropTypes.number,\n    tickRotation: PropTypes.number,\n    format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    renderTick: PropTypes.func,\n    legend: PropTypes.node,\n    legendPosition: PropTypes.oneOf(['start', 'middle', 'end']),\n    legendOffset: PropTypes.number,\n    ariaHidden: PropTypes.bool,\n}\n\nexport const axisPropType = PropTypes.shape(axisPropTypes)\n\nexport const positions = ['top', 'right', 'bottom', 'left'] as const\n", "import { memo } from 'react'\nimport { ScaleValue, AnyScale } from '@nivo/scales'\nimport { Axis } from './Axis'\nimport { positions } from '../props'\nimport { AxisProps } from '../types'\n\nexport const Axes = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        xScale,\n        yScale,\n        width,\n        height,\n        top,\n        right,\n        bottom,\n        left,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: AxisProps<X> | null\n        right?: AxisProps<Y> | null\n        bottom?: AxisProps<X> | null\n        left?: AxisProps<Y> | null\n    }) => {\n        const axes = { top, right, bottom, left }\n\n        return (\n            <>\n                {positions.map(position => {\n                    const axis = axes[position] as typeof position extends 'bottom' | 'top'\n                        ? AxisProps<X> | undefined\n                        : AxisProps<Y> | undefined\n\n                    if (!axis) return null\n\n                    const isXAxis = position === 'top' || position === 'bottom'\n                    const ticksPosition =\n                        position === 'top' || position === 'left' ? 'before' : 'after'\n\n                    return (\n                        <Axis\n                            key={position}\n                            {...axis}\n                            axis={isXAxis ? 'x' : 'y'}\n                            x={position === 'right' ? width : 0}\n                            y={position === 'bottom' ? height : 0}\n                            scale={isXAxis ? xScale : yScale}\n                            length={isXAxis ? width : height}\n                            ticksPosition={ticksPosition}\n                            truncateTickAt={axis.truncateTickAt}\n                        />\n                    )\n                })}\n            </>\n        )\n    }\n)\n", "import { memo, SVGAttributes } from 'react'\nimport { SpringValues, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\n\nexport const GridLine = memo(\n    ({\n        animatedProps,\n    }: {\n        animatedProps: SpringValues<{\n            opacity: number\n            x1: number\n            x2: number\n            y1: number\n            y2: number\n        }>\n    }) => {\n        const theme = useTheme()\n\n        return (\n            <animated.line\n                {...animatedProps}\n                {...(theme.grid.line as SVGAttributes<SVGLineElement>)}\n            />\n        )\n    }\n)\n", "import { memo } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { GridLine } from './GridLine'\nimport { Line } from '../types'\n\nexport const GridLines = memo(({ lines }: { lines: Line[] }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<Line, Record<'opacity' | 'x1' | 'x2' | 'y1' | 'y2', number>>(\n        lines,\n        {\n            keys: line => line.key,\n            initial: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            from: line => ({\n                opacity: 0,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            enter: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            update: line => ({\n                opacity: 1,\n                x1: line.x1,\n                x2: line.x2,\n                y1: line.y1,\n                y2: line.y2,\n            }),\n            leave: {\n                opacity: 0,\n            },\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <g>\n            {transition((animatedProps, line) => (\n                <GridLine {...line} key={line.key} animatedProps={animatedProps} />\n            ))}\n        </g>\n    )\n})\n", "import { useMemo, memo } from 'react'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { GridLines } from './GridLines'\nimport { computeGridLines } from '../compute'\n\nexport const Grid = memo(\n    <X extends ScaleValue, Y extends ScaleValue>({\n        width,\n        height,\n        xScale,\n        yScale,\n        xValues,\n        yValues,\n    }: {\n        width: number\n        height: number\n        xScale?: AnyScale | null\n        xValues?: TicksSpec<X>\n        yScale?: AnyScale | null\n        yValues?: TicksSpec<Y>\n    }) => {\n        const xLines = useMemo(() => {\n            if (!xScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: xScale,\n                axis: 'x',\n                values: xValues,\n            })\n        }, [xScale, xValues, width, height])\n\n        const yLines = useMemo(() => {\n            if (!yScale) return false\n\n            return computeGridLines({\n                width,\n                height,\n                scale: yScale,\n                axis: 'y',\n                values: yValues,\n            })\n        }, [height, width, yScale, yValues])\n\n        return (\n            <>\n                {xLines && <GridLines lines={xLines} />}\n                {yLines && <GridLines lines={yLines} />}\n            </>\n        )\n    }\n)\n", "import { degreesToRadians, CompleteTheme } from '@nivo/core'\nimport { ScaleValue, AnyScale, TicksSpec } from '@nivo/scales'\nimport { computeCartesianTicks, getFormatter, computeGridLines } from './compute'\nimport { positions } from './props'\nimport { AxisLegendPosition, CanvasAxisProps, ValueFormatter } from './types'\n\nexport const renderAxisToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        axis,\n        scale,\n        x = 0,\n        y = 0,\n        length,\n\n        ticksPosition,\n        tickValues,\n        tickSize = 5,\n        tickPadding = 5,\n        tickRotation = 0,\n        format: _format,\n\n        legend,\n        legendPosition = 'end',\n        legendOffset = 0,\n\n        theme,\n    }: {\n        axis: 'x' | 'y'\n        scale: AnyScale\n        x?: number\n        y?: number\n        length: number\n        ticksPosition: 'before' | 'after'\n        tickValues?: TicksSpec<Value>\n        tickSize?: number\n        tickPadding?: number\n        tickRotation?: number\n        format?: string | ValueFormatter<Value>\n        legend?: string\n        legendPosition?: AxisLegendPosition\n        legendOffset?: number\n        theme: CompleteTheme\n    }\n) => {\n    const { ticks, textAlign, textBaseline } = computeCartesianTicks({\n        axis,\n        scale,\n        ticksPosition,\n        tickValues,\n        tickSize,\n        tickPadding,\n        tickRotation,\n        engine: 'canvas',\n    })\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.textAlign = textAlign\n    ctx.textBaseline = textBaseline\n\n    const textStyle = theme.axis.ticks.text\n    ctx.font = `${textStyle.fontWeight ? `${textStyle.fontWeight} ` : ''}${textStyle.fontSize}px ${\n        textStyle.fontFamily\n    }`\n\n    if ((theme.axis.domain.line.strokeWidth ?? 0) > 0) {\n        ctx.lineWidth = Number(theme.axis.domain.line.strokeWidth)\n        ctx.lineCap = 'square'\n\n        if (theme.axis.domain.line.stroke) {\n            ctx.strokeStyle = theme.axis.domain.line.stroke\n        }\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.lineTo(axis === 'x' ? length : 0, axis === 'x' ? 0 : length)\n        ctx.stroke()\n    }\n\n    const format = typeof _format === 'function' ? _format : (value: unknown) => `${value}`\n\n    ticks.forEach(tick => {\n        if ((theme.axis.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            ctx.lineCap = 'square'\n\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x, tick.y)\n            ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY)\n            ctx.stroke()\n        }\n\n        const value = format(tick.value)\n\n        ctx.save()\n        ctx.translate(tick.x + tick.textX, tick.y + tick.textY)\n        ctx.rotate(degreesToRadians(tickRotation))\n\n        if (textStyle.outlineWidth > 0) {\n            ctx.strokeStyle = textStyle.outlineColor\n            ctx.lineWidth = textStyle.outlineWidth * 2\n            ctx.lineJoin = 'round'\n            ctx.strokeText(`${value}`, 0, 0)\n        }\n\n        if (theme.axis.ticks.text.fill) {\n            ctx.fillStyle = textStyle.fill\n        }\n\n        ctx.fillText(`${value}`, 0, 0)\n        ctx.restore()\n    })\n\n    if (legend !== undefined) {\n        let legendX = 0\n        let legendY = 0\n        let legendRotation = 0\n        let textAlign: CanvasTextAlign = 'center'\n\n        if (axis === 'y') {\n            legendRotation = -90\n            legendX = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n                legendY = length\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendY = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n            }\n        } else {\n            legendY = legendOffset\n            if (legendPosition === 'start') {\n                textAlign = 'start'\n            } else if (legendPosition === 'middle') {\n                textAlign = 'center'\n                legendX = length / 2\n            } else if (legendPosition === 'end') {\n                textAlign = 'end'\n                legendX = length\n            }\n        }\n\n        ctx.translate(legendX, legendY)\n        ctx.rotate(degreesToRadians(legendRotation))\n        ctx.font = `${\n            theme.axis.legend.text.fontWeight ? `${theme.axis.legend.text.fontWeight} ` : ''\n        }${theme.axis.legend.text.fontSize}px ${theme.axis.legend.text.fontFamily}`\n\n        if (theme.axis.legend.text.fill) {\n            ctx.fillStyle = theme.axis.legend.text.fill\n        }\n\n        ctx.textAlign = textAlign\n        ctx.textBaseline = 'middle'\n        ctx.fillText(legend, 0, 0)\n    }\n\n    ctx.restore()\n}\n\nexport const renderAxesToCanvas = <X extends ScaleValue, Y extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        xScale,\n        yScale,\n        width,\n        height,\n\n        top,\n        right,\n        bottom,\n        left,\n\n        theme,\n    }: {\n        xScale: AnyScale\n        yScale: AnyScale\n        width: number\n        height: number\n        top?: CanvasAxisProps<X> | null\n        right?: CanvasAxisProps<Y> | null\n        bottom?: CanvasAxisProps<X> | null\n        left?: CanvasAxisProps<Y> | null\n        theme: CompleteTheme\n    }\n) => {\n    const axes = { top, right, bottom, left }\n\n    positions.forEach(position => {\n        const axis = axes[position] as typeof position extends 'bottom' | 'top'\n            ? CanvasAxisProps<X> | undefined\n            : CanvasAxisProps<Y> | undefined\n\n        if (!axis) return null\n\n        const isXAxis = position === 'top' || position === 'bottom'\n        const ticksPosition = position === 'top' || position === 'left' ? 'before' : 'after'\n        const scale = isXAxis ? xScale : yScale\n        const format = getFormatter(axis.format, scale)\n\n        renderAxisToCanvas(ctx, {\n            ...axis,\n            axis: isXAxis ? 'x' : 'y',\n            x: position === 'right' ? width : 0,\n            y: position === 'bottom' ? height : 0,\n            scale,\n            format,\n            length: isXAxis ? width : height,\n            ticksPosition,\n            theme,\n        })\n    })\n}\n\nexport const renderGridLinesToCanvas = <Value extends ScaleValue>(\n    ctx: CanvasRenderingContext2D,\n    {\n        width,\n        height,\n        scale,\n        axis,\n        values,\n    }: {\n        width: number\n        height: number\n        scale: AnyScale\n        axis: 'x' | 'y'\n        values?: TicksSpec<Value>\n    }\n) => {\n    const lines = computeGridLines({ width, height, scale, axis, values })\n\n    lines.forEach(line => {\n        ctx.beginPath()\n        ctx.moveTo(line.x1, line.y1)\n        ctx.lineTo(line.x2, line.y2)\n        ctx.stroke()\n    })\n}\n", "\nconst EPSILON = Math.pow(2, -52);\nconst EDGE_STACK = new Uint32Array(512);\n\nexport default class Delaunator {\n\n    static from(points, getX = defaultGetX, getY = defaultGetY) {\n        const n = points.length;\n        const coords = new Float64Array(n * 2);\n\n        for (let i = 0; i < n; i++) {\n            const p = points[i];\n            coords[2 * i] = getX(p);\n            coords[2 * i + 1] = getY(p);\n        }\n\n        return new Delaunator(coords);\n    }\n\n    constructor(coords) {\n        const n = coords.length >> 1;\n        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\n\n        this.coords = coords;\n\n        // arrays that will store the triangulation graph\n        const maxTriangles = Math.max(2 * n - 5, 0);\n        this._triangles = new Uint32Array(maxTriangles * 3);\n        this._halfedges = new Int32Array(maxTriangles * 3);\n\n        // temporary arrays for tracking the edges of the advancing convex hull\n        this._hashSize = Math.ceil(Math.sqrt(n));\n        this._hullPrev = new Uint32Array(n); // edge to prev edge\n        this._hullNext = new Uint32Array(n); // edge to next edge\n        this._hullTri = new Uint32Array(n); // edge to adjacent triangle\n        this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash\n\n        // temporary arrays for sorting points\n        this._ids = new Uint32Array(n);\n        this._dists = new Float64Array(n);\n\n        this.update();\n    }\n\n    update() {\n        const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} =  this;\n        const n = coords.length >> 1;\n\n        // populate an array of point indices; calculate input data bbox\n        let minX = Infinity;\n        let minY = Infinity;\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n\n        for (let i = 0; i < n; i++) {\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n            this._ids[i] = i;\n        }\n        const cx = (minX + maxX) / 2;\n        const cy = (minY + maxY) / 2;\n\n        let minDist = Infinity;\n        let i0, i1, i2;\n\n        // pick a seed point close to the center\n        for (let i = 0; i < n; i++) {\n            const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist) {\n                i0 = i;\n                minDist = d;\n            }\n        }\n        const i0x = coords[2 * i0];\n        const i0y = coords[2 * i0 + 1];\n\n        minDist = Infinity;\n\n        // find the point closest to the seed\n        for (let i = 0; i < n; i++) {\n            if (i === i0) continue;\n            const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist && d > 0) {\n                i1 = i;\n                minDist = d;\n            }\n        }\n        let i1x = coords[2 * i1];\n        let i1y = coords[2 * i1 + 1];\n\n        let minRadius = Infinity;\n\n        // find the third point which forms the smallest circumcircle with the first two\n        for (let i = 0; i < n; i++) {\n            if (i === i0 || i === i1) continue;\n            const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);\n            if (r < minRadius) {\n                i2 = i;\n                minRadius = r;\n            }\n        }\n        let i2x = coords[2 * i2];\n        let i2y = coords[2 * i2 + 1];\n\n        if (minRadius === Infinity) {\n            // order collinear points by dx (or dy if all x are identical)\n            // and return the list as a hull\n            for (let i = 0; i < n; i++) {\n                this._dists[i] = (coords[2 * i] - coords[0]) || (coords[2 * i + 1] - coords[1]);\n            }\n            quicksort(this._ids, this._dists, 0, n - 1);\n            const hull = new Uint32Array(n);\n            let j = 0;\n            for (let i = 0, d0 = -Infinity; i < n; i++) {\n                const id = this._ids[i];\n                if (this._dists[id] > d0) {\n                    hull[j++] = id;\n                    d0 = this._dists[id];\n                }\n            }\n            this.hull = hull.subarray(0, j);\n            this.triangles = new Uint32Array(0);\n            this.halfedges = new Uint32Array(0);\n            return;\n        }\n\n        // swap the order of the seed points for counter-clockwise orientation\n        if (orient(i0x, i0y, i1x, i1y, i2x, i2y)) {\n            const i = i1;\n            const x = i1x;\n            const y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n\n        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n        this._cx = center.x;\n        this._cy = center.y;\n\n        for (let i = 0; i < n; i++) {\n            this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);\n        }\n\n        // sort the points by distance from the seed triangle circumcenter\n        quicksort(this._ids, this._dists, 0, n - 1);\n\n        // set up the seed triangle as the starting hull\n        this._hullStart = i0;\n        let hullSize = 3;\n\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n\n        hullHash.fill(-1);\n        hullHash[this._hashKey(i0x, i0y)] = i0;\n        hullHash[this._hashKey(i1x, i1y)] = i1;\n        hullHash[this._hashKey(i2x, i2y)] = i2;\n\n        this.trianglesLen = 0;\n        this._addTriangle(i0, i1, i2, -1, -1, -1);\n\n        for (let k = 0, xp, yp; k < this._ids.length; k++) {\n            const i = this._ids[k];\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n\n            // skip near-duplicate points\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\n            xp = x;\n            yp = y;\n\n            // skip seed triangle points\n            if (i === i0 || i === i1 || i === i2) continue;\n\n            // find a visible edge on the convex hull using edge hash\n            let start = 0;\n            for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {\n                start = hullHash[(key + j) % this._hashSize];\n                if (start !== -1 && start !== hullNext[start]) break;\n            }\n\n            start = hullPrev[start];\n            let e = start, q;\n            while (q = hullNext[e], !orient(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1])) {\n                e = q;\n                if (e === start) {\n                    e = -1;\n                    break;\n                }\n            }\n            if (e === -1) continue; // likely a near-duplicate point; skip it\n\n            // add the first triangle from the point\n            let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n\n            // recursively flip triangles from the point until they satisfy the Delaunay condition\n            hullTri[i] = this._legalize(t + 2);\n            hullTri[e] = t; // keep track of boundary triangles on the hull\n            hullSize++;\n\n            // walk forward through the hull, adding more triangles and flipping recursively\n            let n = hullNext[e];\n            while (q = hullNext[n], orient(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1])) {\n                t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this._legalize(t + 2);\n                hullNext[n] = n; // mark as removed\n                hullSize--;\n                n = q;\n            }\n\n            // walk backward from the other side, adding more triangles and flipping\n            if (e === start) {\n                while (q = hullPrev[e], orient(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1])) {\n                    t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this._legalize(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e; // mark as removed\n                    hullSize--;\n                    e = q;\n                }\n            }\n\n            // update the hull indices\n            this._hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n\n            // save the two new edges in the hash table\n            hullHash[this._hashKey(x, y)] = i;\n            hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\n        }\n\n        this.hull = new Uint32Array(hullSize);\n        for (let i = 0, e = this._hullStart; i < hullSize; i++) {\n            this.hull[i] = e;\n            e = hullNext[e];\n        }\n\n        // trim typed triangle mesh arrays\n        this.triangles = this._triangles.subarray(0, this.trianglesLen);\n        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\n    }\n\n    _hashKey(x, y) {\n        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\n    }\n\n    _legalize(a) {\n        const {_triangles: triangles, _halfedges: halfedges, coords} = this;\n\n        let i = 0;\n        let ar = 0;\n\n        // recursion eliminated with a fixed-size stack\n        while (true) {\n            const b = halfedges[a];\n\n            /* if the pair of triangles doesn't satisfy the Delaunay condition\n             * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n             * then do the same check/flip recursively for the new pair of triangles\n             *\n             *           pl                    pl\n             *          /||\\                  /  \\\n             *       al/ || \\bl            al/    \\a\n             *        /  ||  \\              /      \\\n             *       /  a||b  \\    flip    /___ar___\\\n             *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n             *        \\  ||  /              \\      /\n             *       ar\\ || /br             b\\    /br\n             *          \\||/                  \\  /\n             *           pr                    pr\n             */\n            const a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n\n            if (b === -1) { // convex hull edge\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n                continue;\n            }\n\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n\n            const illegal = inCircle(\n                coords[2 * p0], coords[2 * p0 + 1],\n                coords[2 * pr], coords[2 * pr + 1],\n                coords[2 * pl], coords[2 * pl + 1],\n                coords[2 * p1], coords[2 * p1 + 1]);\n\n            if (illegal) {\n                triangles[a] = p1;\n                triangles[b] = p0;\n\n                const hbl = halfedges[bl];\n\n                // edge swapped on the other side of the hull (rare); fix the halfedge reference\n                if (hbl === -1) {\n                    let e = this._hullStart;\n                    do {\n                        if (this._hullTri[e] === bl) {\n                            this._hullTri[e] = a;\n                            break;\n                        }\n                        e = this._hullPrev[e];\n                    } while (e !== this._hullStart);\n                }\n                this._link(a, hbl);\n                this._link(b, halfedges[ar]);\n                this._link(ar, bl);\n\n                const br = b0 + (b + 1) % 3;\n\n                // don't worry about hitting the cap: it can only happen on extremely degenerate input\n                if (i < EDGE_STACK.length) {\n                    EDGE_STACK[i++] = br;\n                }\n            } else {\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n            }\n        }\n\n        return ar;\n    }\n\n    _link(a, b) {\n        this._halfedges[a] = b;\n        if (b !== -1) this._halfedges[b] = a;\n    }\n\n    // add a new triangle given vertex indices and adjacent half-edge ids\n    _addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.trianglesLen;\n\n        this._triangles[t] = i0;\n        this._triangles[t + 1] = i1;\n        this._triangles[t + 2] = i2;\n\n        this._link(t, a);\n        this._link(t + 1, b);\n        this._link(t + 2, c);\n\n        this.trianglesLen += 3;\n\n        return t;\n    }\n}\n\n// monotonically increases with real angle, but doesn't need expensive trigonometry\nfunction pseudoAngle(dx, dy) {\n    const p = dx / (Math.abs(dx) + Math.abs(dy));\n    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n}\n\nfunction dist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n\n// return 2d orientation sign if we're confident in it through J. Shewchuk's error bound check\nfunction orientIfSure(px, py, rx, ry, qx, qy) {\n    const l = (ry - py) * (qx - px);\n    const r = (rx - px) * (qy - py);\n    return Math.abs(l - r) >= 3.3306690738754716e-16 * Math.abs(l + r) ? l - r : 0;\n}\n\n// a more robust orientation test that's stable in a given triangle (to fix robustness issues)\nfunction orient(rx, ry, qx, qy, px, py) {\n    const sign = orientIfSure(px, py, rx, ry, qx, qy) ||\n    orientIfSure(rx, ry, qx, qy, px, py) ||\n    orientIfSure(qx, qy, px, py, rx, ry);\n    return sign < 0;\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n    const dx = ax - px;\n    const dy = ay - py;\n    const ex = bx - px;\n    const ey = by - py;\n    const fx = cx - px;\n    const fy = cy - py;\n\n    const ap = dx * dx + dy * dy;\n    const bp = ex * ex + ey * ey;\n    const cp = fx * fx + fy * fy;\n\n    return dx * (ey * cp - bp * fy) -\n           dy * (ex * cp - bp * fx) +\n           ap * (ex * fy - ey * fx) < 0;\n}\n\nfunction circumradius(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = (ey * bl - dy * cl) * d;\n    const y = (dx * cl - ex * bl) * d;\n\n    return x * x + y * y;\n}\n\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = ax + (ey * bl - dy * cl) * d;\n    const y = ay + (dx * cl - ex * bl) * d;\n\n    return {x, y};\n}\n\nfunction quicksort(ids, dists, left, right) {\n    if (right - left <= 20) {\n        for (let i = left + 1; i <= right; i++) {\n            const temp = ids[i];\n            const tempDist = dists[temp];\n            let j = i - 1;\n            while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\n            ids[j + 1] = temp;\n        }\n    } else {\n        const median = (left + right) >> 1;\n        let i = left + 1;\n        let j = right;\n        swap(ids, median, i);\n        if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\n        if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);\n        if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);\n\n        const temp = ids[i];\n        const tempDist = dists[temp];\n        while (true) {\n            do i++; while (dists[ids[i]] < tempDist);\n            do j--; while (dists[ids[j]] > tempDist);\n            if (j < i) break;\n            swap(ids, i, j);\n        }\n        ids[left + 1] = ids[j];\n        ids[j] = temp;\n\n        if (right - i + 1 >= j - left) {\n            quicksort(ids, dists, i, right);\n            quicksort(ids, dists, left, j - 1);\n        } else {\n            quicksort(ids, dists, left, j - 1);\n            quicksort(ids, dists, i, right);\n        }\n    }\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultGetX(p) {\n    return p[0];\n}\nfunction defaultGetY(p) {\n    return p[1];\n}\n", "const epsilon = 1e-6;\n\nexport default class Path {\n  constructor() {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n  }\n  moveTo(x, y) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  }\n  lineTo(x, y) {\n    this._ += `L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arc(x, y, r) {\n    x = +x, y = +y, r = +r;\n    const x0 = x + r;\n    const y0 = y;\n    if (r < 0) throw new Error(\"negative radius\");\n    if (this._x1 === null) this._ += `M${x0},${y0}`;\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) this._ += \"L\" + x0 + \",\" + y0;\n    if (!r) return;\n    this._ += `A${r},${r},0,1,1,${x - r},${y}A${r},${r},0,1,1,${this._x1 = x0},${this._y1 = y0}`;\n  }\n  rect(x, y, w, h) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${+w}v${+h}h${-w}Z`;\n  }\n  value() {\n    return this._ || null;\n  }\n}\n", "export default class Polygon {\n  constructor() {\n    this._ = [];\n  }\n  moveTo(x, y) {\n    this._.push([x, y]);\n  }\n  closePath() {\n    this._.push(this._[0].slice());\n  }\n  lineTo(x, y) {\n    this._.push([x, y]);\n  }\n  value() {\n    return this._.length ? this._ : null;\n  }\n}\n", "import Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\n\nexport default class Voronoi {\n  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n    this._init();\n  }\n  update() {\n    this.delaunay.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const {delaunay: {points, hull, triangles}, vectors} = this;\n\n    // Compute circumcenters.\n    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n      const t1 = triangles[i] * 2;\n      const t2 = triangles[i + 1] * 2;\n      const t3 = triangles[i + 2] * 2;\n      const x1 = points[t1];\n      const y1 = points[t1 + 1];\n      const x2 = points[t2];\n      const y2 = points[t2 + 1];\n      const x3 = points[t3];\n      const y3 = points[t3 + 1];\n\n      const dx = x2 - x1;\n      const dy = y2 - y1;\n      const ex = x3 - x1;\n      const ey = y3 - y1;\n      const bl = dx * dx + dy * dy;\n      const cl = ex * ex + ey * ey;\n      const ab = (dx * ey - dy * ex) * 2;\n\n      if (!ab) {\n        // degenerate case (collinear diagram)\n        x = (x1 + x3) / 2 - 1e8 * ey;\n        y = (y1 + y3) / 2 + 1e8 * ex;\n      }\n      else if (Math.abs(ab) < 1e-8) {\n        // almost equal points (degenerate triangle)\n        x = (x1 + x3) / 2;\n        y = (y1 + y3) / 2;\n      } else {\n        const d = 1 / ab;\n        x = x1 + (ey * bl - dy * cl) * d;\n        y = y1 + (dx * cl - ex * bl) * d;\n      }\n      circumcenters[j] = x;\n      circumcenters[j + 1] = y;\n    }\n\n    // Compute exterior cell rays.\n    let h = hull[hull.length - 1];\n    let p0, p1 = h * 4;\n    let x0, x1 = points[2 * h];\n    let y0, y1 = points[2 * h + 1];\n    vectors.fill(0);\n    for (let i = 0; i < hull.length; ++i) {\n      h = hull[i];\n      p0 = p1, x0 = x1, y0 = y1;\n      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n      vectors[p0 + 2] = vectors[p1] = y0 - y1;\n      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n    }\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;\n    if (hull.length <= 1) return null;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = Math.floor(i / 3) * 2;\n      const tj = Math.floor(j / 3) * 2;\n      const xi = circumcenters[ti];\n      const yi = circumcenters[ti + 1];\n      const xj = circumcenters[tj];\n      const yj = circumcenters[tj + 1];\n      this._renderSegment(xi, yi, xj, yj, context);\n    }\n    let h0, h1 = hull[hull.length - 1];\n    for (let i = 0; i < hull.length; ++i) {\n      h0 = h1, h1 = hull[i];\n      const t = Math.floor(inedges[h1] / 3) * 2;\n      const x = circumcenters[t];\n      const y = circumcenters[t + 1];\n      const v = h0 * 4;\n      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n      if (p) this._renderSegment(x, y, p[0], p[1], context);\n    }\n    return buffer && buffer.value();\n  }\n  renderBounds(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n    return buffer && buffer.value();\n  }\n  renderCell(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const points = this._clip(i);\n    if (points === null || !points.length) return;\n    context.moveTo(points[0], points[1]);\n    let n = points.length;\n    while (points[0] === points[n-2] && points[1] === points[n-1] && n > 1) n -= 2;\n    for (let i = 2; i < n; i += 2) {\n      if (points[i] !== points[i-2] || points[i+1] !== points[i-1])\n        context.lineTo(points[i], points[i + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *cellPolygons() {\n    const {delaunay: {points}} = this;\n    for (let i = 0, n = points.length / 2; i < n; ++i) {\n      const cell = this.cellPolygon(i);\n      if (cell) cell.index = i, yield cell;\n    }\n  }\n  cellPolygon(i) {\n    const polygon = new Polygon;\n    this.renderCell(i, polygon);\n    return polygon.value();\n  }\n  _renderSegment(x0, y0, x1, y1, context) {\n    let S;\n    const c0 = this._regioncode(x0, y0);\n    const c1 = this._regioncode(x1, y1);\n    if (c0 === 0 && c1 === 0) {\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n      context.moveTo(S[0], S[1]);\n      context.lineTo(S[2], S[3]);\n    }\n  }\n  contains(i, x, y) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n    return this.delaunay._step(i, x, y) === i;\n  }\n  *neighbors(i) {\n    const ci = this._clip(i);\n    if (ci) for (const j of this.delaunay.neighbors(i)) {\n      const cj = this._clip(j);\n      // find the common edge\n      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {\n        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {\n          if (ci[ai] == cj[aj]\n          && ci[ai + 1] == cj[aj + 1]\n          && ci[(ai + 2) % li] == cj[(aj + lj - 2) % lj]\n          && ci[(ai + 3) % li] == cj[(aj + lj - 1) % lj]\n          ) {\n            yield j;\n            break loop;\n          }\n        }\n      }\n    }\n  }\n  _cell(i) {\n    const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;\n    const e0 = inedges[i];\n    if (e0 === -1) return null; // coincident point\n    const points = [];\n    let e = e0;\n    do {\n      const t = Math.floor(e / 3);\n      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n    } while (e !== e0 && e !== -1);\n    return points;\n  }\n  _clip(i) {\n    // degenerate case (1 valid point: return the box)\n    if (i === 0 && this.delaunay.hull.length === 1) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    const points = this._cell(i);\n    if (points === null) return null;\n    const {vectors: V} = this;\n    const v = i * 4;\n    return V[v] || V[v + 1]\n        ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3])\n        : this._clipFinite(i, points);\n  }\n  _clipFinite(i, points) {\n    const n = points.length;\n    let P = null;\n    let x0, y0, x1 = points[n - 2], y1 = points[n - 1];\n    let c0, c1 = this._regioncode(x1, y1);\n    let e0, e1;\n    for (let j = 0; j < n; j += 2) {\n      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n      c0 = c1, c1 = this._regioncode(x1, y1);\n      if (c0 === 0 && c1 === 0) {\n        e0 = e1, e1 = 0;\n        if (P) P.push(x1, y1);\n        else P = [x1, y1];\n      } else {\n        let S, sx0, sy0, sx1, sy1;\n        if (c0 === 0) {\n          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n          [sx0, sy0, sx1, sy1] = S;\n        } else {\n          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n          [sx1, sy1, sx0, sy0] = S;\n          e0 = e1, e1 = this._edgecode(sx0, sy0);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx0, sy0);\n          else P = [sx0, sy0];\n        }\n        e0 = e1, e1 = this._edgecode(sx1, sy1);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n        if (P) P.push(sx1, sy1);\n        else P = [sx1, sy1];\n      }\n    }\n    if (P) {\n      e0 = e1, e1 = this._edgecode(P[0], P[1]);\n      if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    return P;\n  }\n  _clipSegment(x0, y0, x1, y1, c0, c1) {\n    while (true) {\n      if (c0 === 0 && c1 === 0) return [x0, y0, x1, y1];\n      if (c0 & c1) return null;\n      let x, y, c = c0 || c1;\n      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;\n      else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;\n      else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;\n      else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);\n      else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n    }\n  }\n  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n    let P = Array.from(points), p;\n    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n    if (P = this._clipFinite(i, P)) {\n      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n      }\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n    }\n    return P;\n  }\n  _edge(i, e0, e1, P, j) {\n    while (e0 !== e1) {\n      let x, y;\n      switch (e0) {\n        case 0b0101: e0 = 0b0100; continue; // top-left\n        case 0b0100: e0 = 0b0110, x = this.xmax, y = this.ymin; break; // top\n        case 0b0110: e0 = 0b0010; continue; // top-right\n        case 0b0010: e0 = 0b1010, x = this.xmax, y = this.ymax; break; // right\n        case 0b1010: e0 = 0b1000; continue; // bottom-right\n        case 0b1000: e0 = 0b1001, x = this.xmin, y = this.ymax; break; // bottom\n        case 0b1001: e0 = 0b0001; continue; // bottom-left\n        case 0b0001: e0 = 0b0101, x = this.xmin, y = this.ymin; break; // left\n      }\n      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n        P.splice(j, 0, x, y), j += 2;\n      }\n    }\n    if (P.length > 4) {\n      for (let i = 0; i < P.length; i+= 2) {\n        const j = (i + 2) % P.length, k = (i + 4) % P.length;\n        if (P[i] === P[j] && P[j] === P[k]\n        || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1])\n          P.splice(j, 2), i -= 2;\n      }\n    }\n    return j;\n  }\n  _project(x0, y0, vx, vy) {\n    let t = Infinity, c, x, y;\n    if (vy < 0) { // top\n      if (y0 <= this.ymin) return null;\n      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n    } else if (vy > 0) { // bottom\n      if (y0 >= this.ymax) return null;\n      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n    }\n    if (vx > 0) { // right\n      if (x0 >= this.xmax) return null;\n      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n    } else if (vx < 0) { // left\n      if (x0 <= this.xmin) return null;\n      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n    }\n    return [x, y];\n  }\n  _edgecode(x, y) {\n    return (x === this.xmin ? 0b0001\n        : x === this.xmax ? 0b0010 : 0b0000)\n        | (y === this.ymin ? 0b0100\n        : y === this.ymax ? 0b1000 : 0b0000);\n  }\n  _regioncode(x, y) {\n    return (x < this.xmin ? 0b0001\n        : x > this.xmax ? 0b0010 : 0b0000)\n        | (y < this.ymin ? 0b0100\n        : y > this.ymax ? 0b1000 : 0b0000);\n  }\n}\n", "import Delaunator from \"delaunator\";\nimport Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\nimport Voronoi from \"./voronoi.js\";\n\nconst tau = 2 * Math.PI, pow = Math.pow;\n\nfunction pointX(p) {\n  return p[0];\n}\n\nfunction pointY(p) {\n  return p[1];\n}\n\n// A triangulation is collinear if all its triangles have a non-null area\nfunction collinear(d) {\n  const {triangles, coords} = d;\n  for (let i = 0; i < triangles.length; i += 3) {\n    const a = 2 * triangles[i],\n          b = 2 * triangles[i + 1],\n          c = 2 * triangles[i + 2],\n          cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1])\n                - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\n    if (cross > 1e-10) return false;\n  }\n  return true;\n}\n\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n}\n\nexport default class Delaunay {\n  static from(points, fx = pointX, fy = pointY, that) {\n    return new Delaunay(\"length\" in points\n        ? flatArray(points, fx, fy, that)\n        : Float64Array.from(flatIterable(points, fx, fy, that)));\n  }\n  constructor(points) {\n    this._delaunator = new Delaunator(points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = this._delaunator.coords;\n    this._init();\n  }\n  update() {\n    this._delaunator.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const d = this._delaunator, points = this.points;\n\n    // check for collinear\n    if (d.hull && d.hull.length > 2 && collinear(d)) {\n      this.collinear = Int32Array.from({length: points.length/2}, (_,i) => i)\n        .sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors\n      const e = this.collinear[0], f = this.collinear[this.collinear.length - 1],\n        bounds = [ points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1] ],\n        r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\n      for (let i = 0, n = points.length / 2; i < n; ++i) {\n        const p = jitter(points[2 * i], points[2 * i + 1], r);\n        points[2 * i] = p[0];\n        points[2 * i + 1] = p[1];\n      }\n      this._delaunator = new Delaunator(points);\n    } else {\n      delete this.collinear;\n    }\n\n    const halfedges = this.halfedges = this._delaunator.halfedges;\n    const hull = this.hull = this._delaunator.hull;\n    const triangles = this.triangles = this._delaunator.triangles;\n    const inedges = this.inedges.fill(-1);\n    const hullIndex = this._hullIndex.fill(-1);\n\n    // Compute an index from each point to an (arbitrary) incoming halfedge\n    // Used to give the first neighbor of each point; for this reason,\n    // on the hull we give priority to exterior halfedges\n    for (let e = 0, n = halfedges.length; e < n; ++e) {\n      const p = triangles[e % 3 === 2 ? e - 2 : e + 1];\n      if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;\n    }\n    for (let i = 0, n = hull.length; i < n; ++i) {\n      hullIndex[hull[i]] = i;\n    }\n\n    // degenerate case: 1 or 2 (distinct) points\n    if (hull.length <= 2 && hull.length > 0) {\n      this.triangles = new Int32Array(3).fill(-1);\n      this.halfedges = new Int32Array(3).fill(-1);\n      this.triangles[0] = hull[0];\n      this.triangles[1] = hull[1];\n      this.triangles[2] = hull[1];\n      inedges[hull[0]] = 1;\n      if (hull.length === 2) inedges[hull[1]] = 0;\n    }\n  }\n  voronoi(bounds) {\n    return new Voronoi(this, bounds);\n  }\n  *neighbors(i) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, collinear} = this;\n\n    // degenerate case with several collinear points\n    if (collinear) {\n      const l = collinear.indexOf(i);\n      if (l > 0) yield collinear[l - 1];\n      if (l < collinear.length - 1) yield collinear[l + 1];\n      return;\n    }\n\n    const e0 = inedges[i];\n    if (e0 === -1) return; // coincident point\n    let e = e0, p0 = -1;\n    do {\n      yield p0 = triangles[e];\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) return; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        const p = hull[(_hullIndex[i] + 1) % hull.length];\n        if (p !== p0) yield p;\n        return;\n      }\n    } while (e !== e0);\n  }\n  find(x, y, i = 0) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n    const i0 = i;\n    let c;\n    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;\n    return c;\n  }\n  _step(i, x, y) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, points} = this;\n    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n    let c = i;\n    let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\n    const e0 = inedges[i];\n    let e = e0;\n    do {\n      let t = triangles[e];\n      const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\n      if (dt < dc) dc = dt, c = t;\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        e = hull[(_hullIndex[i] + 1) % hull.length];\n        if (e !== t) {\n          if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\n        }\n        break;\n      }\n    } while (e !== e0);\n    return c;\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, halfedges, triangles} = this;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = triangles[i] * 2;\n      const tj = triangles[j] * 2;\n      context.moveTo(points[ti], points[ti + 1]);\n      context.lineTo(points[tj], points[tj + 1]);\n    }\n    this.renderHull(context);\n    return buffer && buffer.value();\n  }\n  renderPoints(context, r = 2) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points} = this;\n    for (let i = 0, n = points.length; i < n; i += 2) {\n      const x = points[i], y = points[i + 1];\n      context.moveTo(x + r, y);\n      context.arc(x, y, r, 0, tau);\n    }\n    return buffer && buffer.value();\n  }\n  renderHull(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {hull, points} = this;\n    const h = hull[0] * 2, n = hull.length;\n    context.moveTo(points[h], points[h + 1]);\n    for (let i = 1; i < n; ++i) {\n      const h = 2 * hull[i];\n      context.lineTo(points[h], points[h + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  hullPolygon() {\n    const polygon = new Polygon;\n    this.renderHull(polygon);\n    return polygon.value();\n  }\n  renderTriangle(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, triangles} = this;\n    const t0 = triangles[i *= 3] * 2;\n    const t1 = triangles[i + 1] * 2;\n    const t2 = triangles[i + 2] * 2;\n    context.moveTo(points[t0], points[t0 + 1]);\n    context.lineTo(points[t1], points[t1 + 1]);\n    context.lineTo(points[t2], points[t2 + 1]);\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *trianglePolygons() {\n    const {triangles} = this;\n    for (let i = 0, n = triangles.length / 3; i < n; ++i) {\n      yield this.trianglePolygon(i);\n    }\n  }\n  trianglePolygon(i) {\n    const polygon = new Polygon;\n    this.renderTriangle(i, polygon);\n    return polygon.value();\n  }\n}\n\nfunction flatArray(points, fx, fy, that) {\n  const n = points.length;\n  const array = new Float64Array(n * 2);\n  for (let i = 0; i < n; ++i) {\n    const p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n  return array;\n}\n\nfunction* flatIterable(points, fx, fy, that) {\n  let i = 0;\n  for (const p of points) {\n    yield fx.call(that, p, i, points);\n    yield fy.call(that, p, i, points);\n    ++i;\n  }\n}\n", "import { VoronoiDomain, VoronoiLayer } from './types'\n\nexport const defaultVoronoiProps = {\n    xDomain: [0, 1] as VoronoiDomain,\n    yDomain: [0, 1] as VoronoiDomain,\n    layers: ['links', 'cells', 'points', 'bounds'] as VoronoiLayer[],\n    enableLinks: false,\n    linkLineWidth: 1,\n    linkLineColor: '#bbbbbb',\n    enableCells: true,\n    cellLineWidth: 2,\n    cellLineColor: '#000000',\n    enablePoints: true,\n    pointSize: 4,\n    pointColor: '#666666',\n    role: 'img',\n}\n", "import { Delaunay } from 'd3-delaunay'\n\ntype NumberPropertyNames<T> = {\n    [K in keyof T]: T[K] extends number ? K : never\n}[keyof T]\n\nexport type XYAccessor<Datum> = NumberPropertyNames<Datum> | ((datum: Datum) => number)\n\nconst getAccessor = <Datum>(directive: XYAccessor<Datum>) =>\n    typeof directive === 'function' ? directive : (datum: Datum) => datum[directive]\n\n/**\n * The delaunay generator requires an array\n * where each point is defined as an array\n * of 2 elements: [x: number, y: number].\n *\n * Points represent the raw input data\n * and x/y represent accessors to x & y.\n */\nexport const computeMeshPoints = <Datum>({\n    points,\n    x = 'x' as NumberPropertyNames<Datum>,\n    y = 'y' as NumberPropertyNames<Datum>,\n}: {\n    points: Datum[]\n    x?: XYAccessor<Datum>\n    y?: XYAccessor<Datum>\n}): [number, number][] => {\n    const getX = getAccessor<Datum>(x)\n    const getY = getAccessor<Datum>(y)\n\n    return points.map(point => [getX(point) as number, getY(point) as number])\n}\n\nexport const computeMesh = ({\n    points,\n    width,\n    height,\n    debug,\n}: {\n    points: [number, number][]\n    width: number\n    height: number\n    debug?: boolean\n}) => {\n    const delaunay = Delaunay.from(points)\n    const voronoi = debug ? delaunay.voronoi([0, 0, width, height]) : undefined\n\n    return { delaunay, voronoi }\n}\n", "import { useMemo } from 'react'\nimport { scaleLinear } from 'd3-scale'\nimport { Delaunay } from 'd3-delaunay'\nimport { computeMeshPoints, computeMesh, XYAccessor } from './computeMesh'\nimport { VoronoiCommonProps, VoronoiDatum, VoronoiCustomLayerProps } from './types'\n\nexport const useVoronoiMesh = <Datum>({\n    points,\n    x,\n    y,\n    width,\n    height,\n    debug,\n}: {\n    points: Datum[]\n    x?: XYAccessor<Datum>\n    y?: XYAccessor<Datum>\n    width: number\n    height: number\n    debug?: boolean\n}) => {\n    const points2d = useMemo(() => computeMeshPoints<Datum>({ points, x, y }), [points, x, y])\n\n    return useMemo(\n        () => computeMesh({ points: points2d, width, height, debug }),\n        [points2d, width, height, debug]\n    )\n}\n\nexport const useVoronoi = ({\n    data,\n    width,\n    height,\n    xDomain,\n    yDomain,\n}: {\n    data: VoronoiDatum[]\n    width: number\n    height: number\n    xDomain: VoronoiCommonProps['xDomain']\n    yDomain: VoronoiCommonProps['yDomain']\n}) => {\n    const xScale = useMemo(() => scaleLinear().domain(xDomain).range([0, width]), [xDomain, width])\n    const yScale = useMemo(\n        () => scaleLinear().domain(yDomain).range([0, height]),\n        [yDomain, height]\n    )\n\n    const points = useMemo(\n        () =>\n            data.map(d => ({\n                x: xScale(d.x),\n                y: yScale(d.y),\n                data: d,\n            })),\n        [data, xScale, yScale]\n    )\n\n    return useMemo(() => {\n        const delaunay = Delaunay.from(points.map(p => [p.x, p.y]))\n        const voronoi = delaunay.voronoi([0, 0, width, height])\n\n        return {\n            points,\n            delaunay,\n            voronoi,\n        }\n    }, [points, width, height])\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const useVoronoiLayerContext = ({\n    points,\n    delaunay,\n    voronoi,\n}: VoronoiCustomLayerProps): VoronoiCustomLayerProps =>\n    useMemo(\n        () => ({\n            points,\n            delaunay,\n            voronoi,\n        }),\n        [points, delaunay, voronoi]\n    )\n", "import { createElement, Fragment, ReactNode } from 'react'\nimport { Container, SvgWrapper, useDimensions } from '@nivo/core'\nimport { VoronoiSvgProps, VoronoiLayerId } from './types'\nimport { defaultVoronoiProps } from './props'\nimport { useVoronoi, useVoronoiLayerContext } from './hooks'\n\ntype InnerVoronoiProps = Partial<Omit<VoronoiSvgProps, 'data' | 'width' | 'height'>> &\n    Pick<VoronoiSvgProps, 'data' | 'width' | 'height'>\n\nconst InnerVoronoi = ({\n    data,\n    width,\n    height,\n    margin: partialMargin,\n    layers = defaultVoronoiProps.layers,\n    xDomain = defaultVoronoiProps.xDomain,\n    yDomain = defaultVoronoiProps.yDomain,\n    enableLinks = defaultVoronoiProps.enableLinks,\n    linkLineWidth = defaultVoronoiProps.linkLineWidth,\n    linkLineColor = defaultVoronoiProps.linkLineColor,\n    enableCells = defaultVoronoiProps.enableCells,\n    cellLineWidth = defaultVoronoiProps.cellLineWidth,\n    cellLineColor = defaultVoronoiProps.cellLineColor,\n    enablePoints = defaultVoronoiProps.enableCells,\n    pointSize = defaultVoronoiProps.pointSize,\n    pointColor = defaultVoronoiProps.pointColor,\n    role = defaultVoronoiProps.role,\n}: InnerVoronoiProps) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { points, delaunay, voronoi } = useVoronoi({\n        data,\n        width: innerWidth,\n        height: innerHeight,\n        xDomain,\n        yDomain,\n    })\n\n    const layerById: Record<VoronoiLayerId, ReactNode> = {\n        links: null,\n        cells: null,\n        points: null,\n        bounds: null,\n    }\n\n    if (enableLinks && layers.includes('links')) {\n        layerById.links = (\n            <path\n                key=\"links\"\n                stroke={linkLineColor}\n                strokeWidth={linkLineWidth}\n                fill=\"none\"\n                d={delaunay.render()}\n            />\n        )\n    }\n\n    if (enableCells && layers.includes('cells')) {\n        layerById.cells = (\n            <path\n                key=\"cells\"\n                d={voronoi.render()}\n                fill=\"none\"\n                stroke={cellLineColor}\n                strokeWidth={cellLineWidth}\n            />\n        )\n    }\n\n    if (enablePoints && layers.includes('points')) {\n        layerById.points = (\n            <path\n                key=\"points\"\n                stroke=\"none\"\n                fill={pointColor}\n                d={delaunay.renderPoints(undefined, pointSize / 2)}\n            />\n        )\n    }\n\n    if (layers.includes('bounds')) {\n        layerById.bounds = (\n            <path\n                key=\"bounds\"\n                fill=\"none\"\n                stroke={cellLineColor}\n                strokeWidth={cellLineWidth}\n                d={voronoi.renderBounds()}\n            />\n        )\n    }\n\n    const layerContext = useVoronoiLayerContext({\n        points,\n        delaunay,\n        voronoi,\n    })\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {layers.map((layer, i) => {\n                if (layerById[layer as VoronoiLayerId] !== undefined) {\n                    return layerById[layer as VoronoiLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Voronoi = ({\n    theme,\n    ...otherProps\n}: Partial<Omit<VoronoiSvgProps, 'data' | 'width' | 'height'>> &\n    Pick<VoronoiSvgProps, 'data' | 'width' | 'height'>) => (\n    <Container isInteractive={false} animate={false} theme={theme}>\n        <InnerVoronoi {...otherProps} />\n    </Container>\n)\n", "import { ResponsiveWrapper } from '@nivo/core'\nimport { VoronoiSvgProps } from './types'\nimport { Voronoi } from './Voronoi'\n\ntype ResponsiveVoronoiProps = Partial<Omit<VoronoiSvgProps, 'data' | 'width' | 'height'>> &\n    Pick<VoronoiSvgProps, 'data'>\n\nexport const ResponsiveVoronoi = (props: ResponsiveVoronoiProps) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <Voronoi width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n", "import { useRef, useState, useCallback, useMemo, MouseEvent } from 'react'\nimport { getRelativeCursor } from '@nivo/core'\nimport { useVoronoiMesh } from './hooks'\nimport { XYAccessor } from './computeMesh'\n\ntype MouseHandler<Datum> = (datum: Datum, event: MouseEvent) => void\n\ninterface MeshProps<Datum> {\n    nodes: Datum[]\n    width: number\n    height: number\n    x?: XYAccessor<Datum>\n    y?: XYAccessor<Datum>\n    onMouseEnter?: MouseHandler<Datum>\n    onMouseMove?: MouseHandler<Datum>\n    onMouseLeave?: MouseHandler<Datum>\n    onClick?: MouseHandler<Datum>\n    debug?: boolean\n}\n\nexport const Mesh = <Datum,>({\n    nodes,\n    width,\n    height,\n    x,\n    y,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    debug,\n}: MeshProps<Datum>) => {\n    const elementRef = useRef<SVGGElement>(null)\n    const [currentIndex, setCurrentIndex] = useState<number | null>(null)\n\n    const { delaunay, voronoi } = useVoronoiMesh({\n        points: nodes,\n        x,\n        y,\n        width,\n        height,\n        debug,\n    })\n\n    const voronoiPath = useMemo(() => {\n        if (debug && voronoi) {\n            return voronoi.render()\n        }\n\n        return undefined\n    }, [debug, voronoi])\n\n    const getIndexAndNodeFromEvent = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            if (!elementRef.current) {\n                return [null, null]\n            }\n\n            const [x, y] = getRelativeCursor(elementRef.current, event)\n            const index = delaunay.find(x, y)\n\n            return [index, index !== undefined ? nodes[index] : null] as [number, Datum | null]\n        },\n        [elementRef, delaunay]\n    )\n\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            const [index, node] = getIndexAndNodeFromEvent(event)\n            setCurrentIndex(index)\n            if (node) {\n                onMouseEnter?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromEvent, setCurrentIndex, onMouseEnter]\n    )\n\n    const handleMouseMove = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            const [index, node] = getIndexAndNodeFromEvent(event)\n            setCurrentIndex(index)\n            if (node) {\n                onMouseMove?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromEvent, setCurrentIndex, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            setCurrentIndex(null)\n            if (onMouseLeave) {\n                let previousNode: Datum | undefined = undefined\n                if (currentIndex !== null) {\n                    previousNode = nodes[currentIndex]\n                }\n                previousNode && onMouseLeave(previousNode, event)\n            }\n        },\n        [setCurrentIndex, currentIndex, onMouseLeave, nodes]\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            const [index, node] = getIndexAndNodeFromEvent(event)\n            setCurrentIndex(index)\n            if (node) {\n                onClick?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromEvent, setCurrentIndex, onClick]\n    )\n\n    return (\n        <g ref={elementRef}>\n            {debug && voronoi && (\n                <>\n                    <path d={voronoiPath} stroke=\"red\" strokeWidth={1} opacity={0.75} />\n                    {/* highlight current cell */}\n                    {currentIndex !== null && (\n                        <path fill=\"pink\" opacity={0.35} d={voronoi.renderCell(currentIndex)} />\n                    )}\n                </>\n            )}\n            {/* transparent rect to intercept mouse events */}\n            <rect\n                width={width}\n                height={height}\n                fill=\"red\"\n                opacity={0}\n                style={{ cursor: 'auto' }}\n                onMouseEnter={handleMouseEnter}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        </g>\n    )\n}\n", "import { Delaunay, Voronoi } from 'd3-delaunay'\n\nexport const renderVoronoiToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    voronoi: Voronoi<Delaunay.Point>\n) => {\n    ctx.save()\n\n    ctx.globalAlpha = 0.75\n    ctx.beginPath()\n    voronoi.render(ctx)\n    ctx.strokeStyle = 'red'\n    ctx.lineWidth = 1\n    ctx.stroke()\n\n    ctx.restore()\n}\n\nexport const renderVoronoiCellToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    voronoi: Voronoi<Delaunay.Point>,\n    index: number\n) => {\n    ctx.save()\n\n    ctx.globalAlpha = 0.35\n    ctx.beginPath()\n    voronoi.renderCell(index, ctx)\n    ctx.fillStyle = 'red'\n    ctx.fill()\n\n    ctx.restore()\n}\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst LinePointTooltip = ({ point }) => {\n    return (\n        <BasicTooltip\n            id={\n                <span>\n                    x: <strong>{point.data.xFormatted}</strong>, y:{' '}\n                    <strong>{point.data.yFormatted}</strong>\n                </span>\n            }\n            enableChip={true}\n            color={point.serieColor}\n        />\n    )\n}\n\nLinePointTooltip.propTypes = {\n    point: PropTypes.object.isRequired,\n}\n\nexport default memo(LinePointTooltip)\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@nivo/core'\nimport { Chip, TableTooltip } from '@nivo/tooltip'\n\nconst SliceTooltip = ({ slice, axis }) => {\n    const theme = useTheme()\n    const otherAxis = axis === 'x' ? 'y' : 'x'\n\n    return (\n        <TableTooltip\n            rows={slice.points.map(point => [\n                <Chip key=\"chip\" color={point.serieColor} style={theme.tooltip.chip} />,\n                point.serieId,\n                <span key=\"value\" style={theme.tooltip.tableCellValue}>\n                    {point.data[`${otherAxis}Formatted`]}\n                </span>,\n            ])}\n        />\n    )\n}\n\nSliceTooltip.propTypes = {\n    slice: PropTypes.object.isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n}\n\nexport default memo(SliceTooltip)\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { lineCurvePropType, blendModePropType, motionPropTypes, defsPropTypes } from '@nivo/core'\nimport { ordinalColorsPropType } from '@nivo/colors'\nimport { axisPropType } from '@nivo/axes'\nimport { LegendPropShape } from '@nivo/legends'\nimport PointTooltip from './PointTooltip'\nimport SliceTooltip from './SliceTooltip'\n\nconst commonPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([\n                        PropTypes.number,\n                        PropTypes.string,\n                        PropTypes.instanceOf(Date),\n                    ]),\n                    y: PropTypes.oneOfType([\n                        PropTypes.number,\n                        PropTypes.string,\n                        PropTypes.instanceOf(Date),\n                    ]),\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n\n    xScale: PropTypes.object.isRequired,\n    xFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    yScale: PropTypes.object.isRequired,\n    yFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf([\n                'grid',\n                'markers',\n                'axes',\n                'areas',\n                'crosshair',\n                'lines',\n                'slices',\n                'points',\n                'mesh',\n                'legends',\n            ]),\n            PropTypes.func,\n        ])\n    ).isRequired,\n\n    curve: lineCurvePropType.isRequired,\n\n    axisTop: axisPropType,\n    axisRight: axisPropType,\n    axisBottom: axisPropType,\n    axisLeft: axisPropType,\n\n    enableGridX: PropTypes.bool.isRequired,\n    enableGridY: PropTypes.bool.isRequired,\n    gridXValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n    gridYValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n\n    enablePoints: PropTypes.bool.isRequired,\n    pointSymbol: PropTypes.func,\n    pointSize: PropTypes.number.isRequired,\n    pointColor: PropTypes.any.isRequired,\n    pointBorderWidth: PropTypes.number.isRequired,\n    pointBorderColor: PropTypes.any.isRequired,\n    enablePointLabel: PropTypes.bool.isRequired,\n    pointLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n\n    markers: PropTypes.arrayOf(\n        PropTypes.shape({\n            axis: PropTypes.oneOf(['x', 'y']).isRequired,\n            value: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n                PropTypes.instanceOf(Date),\n            ]).isRequired,\n            style: PropTypes.object,\n        })\n    ),\n\n    colors: ordinalColorsPropType.isRequired,\n\n    enableArea: PropTypes.bool.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    areaBlendMode: blendModePropType.isRequired,\n    areaBaselineValue: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.instanceOf(Date),\n    ]).isRequired,\n    lineWidth: PropTypes.number.isRequired,\n\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    debugMesh: PropTypes.bool.isRequired,\n\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableSlices: PropTypes.oneOf(['x', 'y', false]).isRequired,\n    debugSlices: PropTypes.bool.isRequired,\n    sliceTooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableCrosshair: PropTypes.bool.isRequired,\n    crosshairType: PropTypes.string.isRequired,\n}\n\nexport const LinePropTypes = {\n    ...commonPropTypes,\n    enablePointLabel: PropTypes.bool.isRequired,\n    role: PropTypes.string.isRequired,\n    useMesh: PropTypes.bool.isRequired,\n    ...motionPropTypes,\n    ...defsPropTypes,\n}\n\nexport const LineCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonDefaultProps = {\n    curve: 'linear',\n\n    xScale: {\n        type: 'point',\n    },\n    yScale: {\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n    },\n\n    layers: [\n        'grid',\n        'markers',\n        'axes',\n        'areas',\n        'crosshair',\n        'lines',\n        'points',\n        'slices',\n        'mesh',\n        'legends',\n    ],\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: true,\n    enableGridY: true,\n\n    enablePoints: true,\n    pointSize: 6,\n    pointColor: { from: 'color' },\n    pointBorderWidth: 0,\n    pointBorderColor: { theme: 'background' },\n    enablePointLabel: false,\n    pointLabel: 'yFormatted',\n\n    colors: { scheme: 'nivo' },\n    enableArea: false,\n    areaBaselineValue: 0,\n    areaOpacity: 0.2,\n    areaBlendMode: 'normal',\n    lineWidth: 2,\n\n    legends: [],\n\n    isInteractive: true,\n    tooltip: PointTooltip,\n    enableSlices: false,\n    debugSlices: false,\n    sliceTooltip: SliceTooltip,\n    debugMesh: false,\n    enableCrosshair: true,\n    crosshairType: 'bottom-left',\n}\n\nexport const LineDefaultProps = {\n    ...commonDefaultProps,\n    enablePointLabel: false,\n    useMesh: false,\n    animate: true,\n    motionConfig: 'gentle',\n    defs: [],\n    fill: [],\n    role: 'img',\n}\n\nexport const LineCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useCallback, useMemo, useState } from 'react'\nimport { area, line } from 'd3-shape'\nimport { curveFromProp, useTheme, useValueFormatter } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { computeXYScalesForSeries } from '@nivo/scales'\nimport { LineDefaultProps } from './props'\n\nexport const useLineGenerator = ({ curve }) => {\n    return useMemo(\n        () =>\n            line()\n                .defined(d => d.x !== null && d.y !== null)\n                .x(d => d.x)\n                .y(d => d.y)\n                .curve(curveFromProp(curve)),\n        [curve]\n    )\n}\n\nexport const useAreaGenerator = ({ curve, yScale, areaBaselineValue }) => {\n    return useMemo(() => {\n        return area()\n            .defined(d => d.x !== null && d.y !== null)\n            .x(d => d.x)\n            .y1(d => d.y)\n            .curve(curveFromProp(curve))\n            .y0(yScale(areaBaselineValue))\n    }, [curve, yScale, areaBaselineValue])\n}\n\nconst usePoints = ({ series, getPointColor, getPointBorderColor, formatX, formatY }) => {\n    return useMemo(() => {\n        return series.reduce((acc, serie) => {\n            return [\n                ...acc,\n                ...serie.data\n                    .filter(datum => datum.position.x !== null && datum.position.y !== null)\n                    .map((datum, i) => {\n                        const point = {\n                            id: `${serie.id}.${i}`,\n                            index: acc.length + i,\n                            serieId: serie.id,\n                            serieColor: serie.color,\n                            x: datum.position.x,\n                            y: datum.position.y,\n                        }\n                        point.color = getPointColor(serie)\n                        point.borderColor = getPointBorderColor(point)\n                        point.data = {\n                            ...datum.data,\n                            xFormatted: formatX(datum.data.x),\n                            yFormatted: formatY(datum.data.y),\n                        }\n\n                        return point\n                    }),\n            ]\n        }, [])\n    }, [series, getPointColor, getPointBorderColor, formatX, formatY])\n}\n\nexport const useSlices = ({ enableSlices, points, width, height }) => {\n    return useMemo(() => {\n        if (enableSlices === false) return []\n\n        if (enableSlices === 'x') {\n            const map = new Map()\n            points.forEach(point => {\n                if (point.data.x === null || point.data.y === null) return\n                if (!map.has(point.x)) map.set(point.x, [point])\n                else map.get(point.x).push(point)\n            })\n            return Array.from(map.entries())\n                .sort((a, b) => a[0] - b[0])\n                .map(([x, slicePoints], i, slices) => {\n                    const prevSlice = slices[i - 1]\n                    const nextSlice = slices[i + 1]\n\n                    let x0\n                    if (!prevSlice) x0 = x\n                    else x0 = x - (x - prevSlice[0]) / 2\n\n                    let sliceWidth\n                    if (!nextSlice) sliceWidth = width - x0\n                    else sliceWidth = x - x0 + (nextSlice[0] - x) / 2\n\n                    return {\n                        id: x,\n                        x0,\n                        x,\n                        y0: 0,\n                        y: 0,\n                        width: sliceWidth,\n                        height,\n                        points: slicePoints.reverse(),\n                    }\n                })\n        } else if (enableSlices === 'y') {\n            const map = new Map()\n            points.forEach(point => {\n                if (point.data.x === null || point.data.y === null) return\n                if (!map.has(point.y)) map.set(point.y, [point])\n                else map.get(point.y).push(point)\n            })\n            return Array.from(map.entries())\n                .sort((a, b) => a[0] - b[0])\n                .map(([y, slicePoints], i, slices) => {\n                    const prevSlice = slices[i - 1]\n                    const nextSlice = slices[i + 1]\n\n                    let y0\n                    if (!prevSlice) y0 = y\n                    else y0 = y - (y - prevSlice[0]) / 2\n\n                    let sliceHeight\n                    if (!nextSlice) sliceHeight = height - y0\n                    else sliceHeight = y - y0 + (nextSlice[0] - y) / 2\n\n                    return {\n                        id: y,\n                        x0: 0,\n                        x: 0,\n                        y0,\n                        y,\n                        width,\n                        height: sliceHeight,\n                        points: slicePoints.reverse(),\n                    }\n                })\n        }\n    }, [enableSlices, points])\n}\n\nexport const useLine = ({\n    data,\n    xScale: xScaleSpec = LineDefaultProps.xScale,\n    xFormat,\n    yScale: yScaleSpec = LineDefaultProps.yScale,\n    yFormat,\n    width,\n    height,\n    colors = LineDefaultProps.colors,\n    curve = LineDefaultProps.curve,\n    areaBaselineValue = LineDefaultProps.areaBaselineValue,\n    pointColor = LineDefaultProps.pointColor,\n    pointBorderColor = LineDefaultProps.pointBorderColor,\n    enableSlices = LineDefaultProps.enableSlicesTooltip,\n}) => {\n    const formatX = useValueFormatter(xFormat)\n    const formatY = useValueFormatter(yFormat)\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n    const [hiddenIds, setHiddenIds] = useState([])\n\n    const {\n        xScale,\n        yScale,\n        series: rawSeries,\n    } = useMemo(\n        () =>\n            computeXYScalesForSeries(\n                data.filter(item => hiddenIds.indexOf(item.id) === -1),\n                xScaleSpec,\n                yScaleSpec,\n                width,\n                height\n            ),\n        [data, hiddenIds, xScaleSpec, yScaleSpec, width, height]\n    )\n\n    const { legendData, series } = useMemo(() => {\n        const dataWithColor = data.map(line => ({\n            id: line.id,\n            label: line.id,\n            color: getColor(line),\n        }))\n        const series = dataWithColor\n            .map(datum => ({\n                ...rawSeries.find(serie => serie.id === datum.id),\n                color: datum.color,\n            }))\n            .filter(item => Boolean(item.id))\n        const legendData = dataWithColor\n            .map(item => ({ ...item, hidden: !series.find(serie => serie.id === item.id) }))\n            .reverse()\n\n        return { legendData, series }\n    }, [data, rawSeries, getColor])\n\n    const toggleSerie = useCallback(id => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const points = usePoints({\n        series,\n        getPointColor,\n        getPointBorderColor,\n        formatX,\n        formatY,\n    })\n\n    const slices = useSlices({\n        enableSlices,\n        points,\n        width,\n        height,\n    })\n\n    const lineGenerator = useLineGenerator({ curve })\n    const areaGenerator = useAreaGenerator({\n        curve,\n        yScale,\n        areaBaselineValue,\n    })\n\n    return {\n        legendData,\n        toggleSerie,\n        lineGenerator,\n        areaGenerator,\n        getColor,\n        series,\n        xScale,\n        yScale,\n        slices,\n        points,\n    }\n}\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig, blendModePropType } from '@nivo/core'\n\nconst AreaPath = ({ areaBlendMode, areaOpacity, color, fill, path }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedPath = useAnimatedPath(path)\n    const animatedProps = useSpring({\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={fill ? fill : animatedProps.color}\n            fillOpacity={areaOpacity}\n            strokeWidth={0}\n            style={{\n                mixBlendMode: areaBlendMode,\n            }}\n        />\n    )\n}\n\nAreaPath.propTypes = {\n    areaBlendMode: blendModePropType.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    color: PropTypes.string,\n    fill: PropTypes.string,\n    path: PropTypes.string.isRequired,\n}\n\nconst Areas = ({ areaGenerator, areaOpacity, areaBlendMode, lines }) => {\n    const computedLines = lines.slice(0).reverse()\n\n    return (\n        <g>\n            {computedLines.map(line => (\n                <AreaPath\n                    key={line.id}\n                    path={areaGenerator(line.data.map(d => d.position))}\n                    {...{ areaOpacity, areaBlendMode, ...line }}\n                />\n            ))}\n        </g>\n    )\n}\n\nAreas.propTypes = {\n    areaGenerator: PropTypes.func.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    areaBlendMode: blendModePropType.isRequired,\n    lines: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default memo(Areas)\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath } from '@nivo/core'\n\nconst LinesItem = ({ lineGenerator, points, color, thickness }) => {\n    const path = useMemo(() => lineGenerator(points), [lineGenerator, points])\n    const animatedPath = useAnimatedPath(path)\n\n    return <animated.path d={animatedPath} fill=\"none\" strokeWidth={thickness} stroke={color} />\n}\n\nLinesItem.propTypes = {\n    points: PropTypes.arrayOf(\n        PropTypes.shape({\n            x: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            y: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        })\n    ),\n    lineGenerator: PropTypes.func.isRequired,\n    color: PropTypes.string.isRequired,\n    thickness: PropTypes.number.isRequired,\n}\n\nexport default memo(LinesItem)\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport LinesItem from './LinesItem'\n\nconst Lines = ({ lines, lineGenerator, lineWidth }) => {\n    return lines\n        .slice(0)\n        .reverse()\n        .map(({ id, data, color }) => (\n            <LinesItem\n                key={id}\n                id={id}\n                points={data.map(d => d.position)}\n                lineGenerator={lineGenerator}\n                color={color}\n                thickness={lineWidth}\n            />\n        ))\n}\n\nLines.propTypes = {\n    lines: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    data: PropTypes.shape({\n                        x: PropTypes.oneOfType([\n                            PropTypes.string,\n                            PropTypes.number,\n                            PropTypes.instanceOf(Date),\n                        ]),\n                        y: PropTypes.oneOfType([\n                            PropTypes.string,\n                            PropTypes.number,\n                            PropTypes.instanceOf(Date),\n                        ]),\n                    }).isRequired,\n                    position: PropTypes.shape({\n                        x: PropTypes.number,\n                        y: PropTypes.number,\n                    }).isRequired,\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n    lineWidth: PropTypes.number.isRequired,\n    lineGenerator: PropTypes.func.isRequired,\n}\n\nexport default memo(Lines)\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@nivo/tooltip'\n\nconst SlicesItem = ({\n    slice,\n    axis,\n    debug,\n    tooltip,\n    isCurrent,\n    setCurrent,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n}) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { slice, axis }), event, 'right')\n            setCurrent(slice)\n            onMouseEnter && onMouseEnter(slice, event)\n        },\n        [showTooltipFromEvent, tooltip, slice, onMouseEnter]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { slice, axis }), event, 'right')\n            onMouseMove && onMouseMove(slice, event)\n        },\n        [showTooltipFromEvent, tooltip, slice, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave && onMouseLeave(slice, event)\n        },\n        [hideTooltip, slice, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            onClick && onClick(slice, event)\n        },\n        [slice, onClick]\n    )\n\n    return (\n        <rect\n            x={slice.x0}\n            y={slice.y0}\n            width={slice.width}\n            height={slice.height}\n            stroke=\"red\"\n            strokeWidth={debug ? 1 : 0}\n            strokeOpacity={0.75}\n            fill=\"red\"\n            fillOpacity={isCurrent && debug ? 0.35 : 0}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n            data-testid={`slice-${slice.id}`}\n        />\n    )\n}\n\nSlicesItem.propTypes = {\n    slice: PropTypes.object.isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    debug: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    isCurrent: PropTypes.bool.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n}\n\nexport default memo(SlicesItem)\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport SlicesItem from './SlicesItem'\n\nconst Slices = ({\n    slices,\n    axis,\n    debug,\n    height,\n    tooltip,\n    current,\n    setCurrent,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n}) => {\n    return slices.map(slice => (\n        <SlicesItem\n            key={slice.id}\n            slice={slice}\n            axis={axis}\n            debug={debug}\n            height={height}\n            tooltip={tooltip}\n            setCurrent={setCurrent}\n            isCurrent={current !== null && current.id === slice.id}\n            onMouseEnter={onMouseEnter}\n            onMouseMove={onMouseMove}\n            onMouseLeave={onMouseLeave}\n            onClick={onClick}\n        />\n    ))\n}\n\nSlices.propTypes = {\n    slices: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n                PropTypes.instanceOf(Date),\n            ]).isRequired,\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n            points: PropTypes.arrayOf(PropTypes.object).isRequired,\n        })\n    ).isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    debug: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    current: PropTypes.object,\n    setCurrent: PropTypes.func.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n}\n\nexport default memo(Slices)\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { getLabelGenerator, DotsItem, useTheme } from '@nivo/core'\n\nconst Points = ({ points, symbol, size, borderWidth, enableLabel, label, labelYOffset }) => {\n    const theme = useTheme()\n    const getLabel = getLabelGenerator(label)\n\n    /**\n     * We reverse the `points` array so that points from the lower lines in stacked lines\n     * graph are drawn on top. See https://github.com/plouc/nivo/issues/1051.\n     */\n    const mappedPoints = points\n        .slice(0)\n        .reverse()\n        .map(point => {\n            const mappedPoint = {\n                id: point.id,\n                x: point.x,\n                y: point.y,\n                datum: point.data,\n                fill: point.color,\n                stroke: point.borderColor,\n                label: enableLabel ? getLabel(point.data) : null,\n            }\n\n            return mappedPoint\n        })\n\n    return (\n        <g>\n            {mappedPoints.map(point => (\n                <DotsItem\n                    key={point.id}\n                    x={point.x}\n                    y={point.y}\n                    datum={point.datum}\n                    symbol={symbol}\n                    size={size}\n                    color={point.fill}\n                    borderWidth={borderWidth}\n                    borderColor={point.stroke}\n                    label={point.label}\n                    labelYOffset={labelYOffset}\n                    theme={theme}\n                />\n            ))}\n        </g>\n    )\n}\n\nPoints.propTypes = {\n    points: PropTypes.arrayOf(PropTypes.object),\n    symbol: PropTypes.func,\n    size: PropTypes.number.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelYOffset: PropTypes.number,\n}\n\nexport default memo(Points)\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@nivo/tooltip'\nimport { Mesh as BaseMesh } from '@nivo/voronoi'\n\nconst Mesh = ({\n    points,\n    width,\n    height,\n    margin,\n    setCurrent,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n    debug,\n}) => {\n    const { showTooltipAt, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        (point, event) => {\n            showTooltipAt(\n                createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            setCurrent(point)\n            onMouseEnter && onMouseEnter(point, event)\n        },\n        [setCurrent, showTooltipAt, tooltip, onMouseEnter, margin]\n    )\n\n    const handleMouseMove = useCallback(\n        (point, event) => {\n            showTooltipAt(\n                createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            setCurrent(point)\n            onMouseMove && onMouseMove(point, event)\n        },\n        [setCurrent, showTooltipAt, tooltip, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (point, event) => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave && onMouseLeave(point, event)\n        },\n        [hideTooltip, setCurrent, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        (point, event) => {\n            onClick && onClick(point, event)\n        },\n        [onClick]\n    )\n\n    return (\n        <BaseMesh\n            nodes={points}\n            width={width}\n            height={height}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n            debug={debug}\n        />\n    )\n}\n\nMesh.propTypes = {\n    points: PropTypes.arrayOf(PropTypes.object).isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    margin: PropTypes.object.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    debug: PropTypes.bool.isRequired,\n}\n\nexport default memo(Mesh)\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { Fragment, useState } from 'react'\nimport {\n    bindDefs,\n    withContainer,\n    useDimensions,\n    useTheme,\n    SvgWrapper,\n    CartesianMarkers,\n} from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { Axes, Grid } from '@nivo/axes'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { Crosshair } from '@nivo/tooltip'\nimport { useLine } from './hooks'\nimport { LinePropTypes, LineDefaultProps } from './props'\nimport Areas from './Areas'\nimport Lines from './Lines'\nimport Slices from './Slices'\nimport Points from './Points'\nimport Mesh from './Mesh'\n\nconst Line = props => {\n    const {\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        layers,\n        curve,\n        areaBaselineValue,\n\n        colors,\n\n        margin: partialMargin,\n        width,\n        height,\n\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        enableGridX,\n        enableGridY,\n        gridXValues,\n        gridYValues,\n\n        lineWidth,\n        enableArea,\n        areaOpacity,\n        areaBlendMode,\n\n        enablePoints,\n        pointSymbol,\n        pointSize,\n        pointColor,\n        pointBorderWidth,\n        pointBorderColor,\n        enablePointLabel,\n        pointLabel,\n        pointLabelYOffset,\n\n        defs,\n        fill,\n\n        markers,\n\n        legends,\n\n        isInteractive,\n\n        useMesh,\n        debugMesh,\n\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n\n        tooltip,\n\n        enableSlices,\n        debugSlices,\n        sliceTooltip,\n\n        enableCrosshair,\n        crosshairType,\n\n        role,\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        legendData,\n        toggleSerie,\n        lineGenerator,\n        areaGenerator,\n        series,\n        xScale,\n        yScale,\n        slices,\n        points,\n    } = useLine({\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        curve,\n        areaBaselineValue,\n        pointColor,\n        pointBorderColor,\n        enableSlices,\n    })\n\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n\n    const [currentPoint, setCurrentPoint] = useState(null)\n    const [currentSlice, setCurrentSlice] = useState(null)\n\n    const layerById = {\n        grid: (\n            <Grid\n                key=\"grid\"\n                theme={theme}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        ),\n        markers: (\n            <CartesianMarkers\n                key=\"markers\"\n                markers={markers}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale}\n                yScale={yScale}\n                theme={theme}\n            />\n        ),\n        axes: (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                theme={theme}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        ),\n        areas: null,\n        lines: (\n            <Lines key=\"lines\" lines={series} lineGenerator={lineGenerator} lineWidth={lineWidth} />\n        ),\n        slices: null,\n        points: null,\n        crosshair: null,\n        mesh: null,\n        legends: legends.map((legend, i) => (\n            <BoxLegendSvg\n                key={`legend.${i}`}\n                {...legend}\n                containerWidth={innerWidth}\n                containerHeight={innerHeight}\n                data={legend.data || legendData}\n                theme={theme}\n                toggleSerie={legend.toggleSerie ? toggleSerie : undefined}\n            />\n        )),\n    }\n\n    const boundDefs = bindDefs(defs, series, fill)\n\n    if (enableArea) {\n        layerById.areas = (\n            <Areas\n                key=\"areas\"\n                areaGenerator={areaGenerator}\n                areaOpacity={areaOpacity}\n                areaBlendMode={areaBlendMode}\n                lines={series}\n            />\n        )\n    }\n\n    if (isInteractive && enableSlices !== false) {\n        layerById.slices = (\n            <Slices\n                key=\"slices\"\n                slices={slices}\n                axis={enableSlices}\n                debug={debugSlices}\n                height={innerHeight}\n                tooltip={sliceTooltip}\n                current={currentSlice}\n                setCurrent={setCurrentSlice}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n            />\n        )\n    }\n\n    if (enablePoints) {\n        layerById.points = (\n            <Points\n                key=\"points\"\n                points={points}\n                symbol={pointSymbol}\n                size={pointSize}\n                color={getPointColor}\n                borderWidth={pointBorderWidth}\n                borderColor={getPointBorderColor}\n                enableLabel={enablePointLabel}\n                label={pointLabel}\n                labelYOffset={pointLabelYOffset}\n            />\n        )\n    }\n\n    if (isInteractive && enableCrosshair) {\n        if (currentPoint !== null) {\n            layerById.crosshair = (\n                <Crosshair\n                    key=\"crosshair\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    x={currentPoint.x}\n                    y={currentPoint.y}\n                    type={crosshairType}\n                />\n            )\n        }\n        if (currentSlice !== null) {\n            layerById.crosshair = (\n                <Crosshair\n                    key=\"crosshair\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    x={currentSlice.x}\n                    y={currentSlice.y}\n                    type={enableSlices}\n                />\n            )\n        }\n    }\n\n    if (isInteractive && useMesh && enableSlices === false) {\n        layerById.mesh = (\n            <Mesh\n                key=\"mesh\"\n                points={points}\n                width={innerWidth}\n                height={innerHeight}\n                margin={margin}\n                current={currentPoint}\n                setCurrent={setCurrentPoint}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                tooltip={tooltip}\n                debug={debugMesh}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper\n            defs={boundDefs}\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                ...props,\n                                innerWidth,\n                                innerHeight,\n                                series,\n                                slices,\n                                points,\n                                xScale,\n                                yScale,\n                                lineGenerator,\n                                areaGenerator,\n                                currentPoint,\n                                setCurrentPoint,\n                                currentSlice,\n                                setCurrentSlice,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nLine.propTypes = LinePropTypes\nLine.defaultProps = LineDefaultProps\n\nexport default withContainer(Line)\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Line from './Line'\n\nconst ResponsiveLine = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Line width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveLine\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, useRef, useEffect, useState, useCallback, forwardRef } from 'react'\nimport {\n    withContainer,\n    useDimensions,\n    useTheme,\n    getRelativeCursor,\n    isCursorInRect,\n} from '@nivo/core'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useVoronoiMesh, renderVoronoiToCanvas, renderVoronoiCellToCanvas } from '@nivo/voronoi'\nimport { LineCanvasPropTypes, LineCanvasDefaultProps } from './props'\nimport { useLine } from './hooks'\n\nconst LineCanvas = ({\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio,\n\n    data,\n    xScale: xScaleSpec,\n    xFormat,\n    yScale: yScaleSpec,\n    yFormat,\n    curve,\n\n    layers,\n\n    colors,\n    lineWidth,\n\n    enableArea,\n    areaBaselineValue,\n    areaOpacity,\n\n    enablePoints,\n    pointSize,\n    pointColor,\n    pointBorderWidth,\n    pointBorderColor,\n\n    enableGridX,\n    gridXValues,\n    enableGridY,\n    gridYValues,\n    axisTop,\n    axisRight,\n    axisBottom,\n    axisLeft,\n\n    legends,\n\n    isInteractive,\n    debugMesh,\n    //onMouseEnter,\n    //onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n\n    canvasRef,\n}) => {\n    const canvasEl = useRef(null)\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n    const theme = useTheme()\n    const [currentPoint, setCurrentPoint] = useState(null)\n\n    const { lineGenerator, areaGenerator, series, xScale, yScale, points } = useLine({\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        curve,\n        areaBaselineValue,\n        pointColor,\n        pointBorderColor,\n    })\n\n    const { delaunay, voronoi } = useVoronoiMesh({\n        points,\n        width: innerWidth,\n        height: innerHeight,\n        debug: debugMesh,\n    })\n\n    useEffect(() => {\n        if (canvasRef) {\n            canvasRef.current = canvasEl.current\n        }\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (typeof layer === 'function') {\n                layer({\n                    ctx,\n                    innerWidth,\n                    innerHeight,\n                    series,\n                    points,\n                    xScale,\n                    yScale,\n                    lineWidth,\n                    lineGenerator,\n                    areaGenerator,\n                    currentPoint,\n                    setCurrentPoint,\n                })\n            }\n\n            if (layer === 'grid' && theme.grid.line.strokeWidth > 0) {\n                ctx.lineWidth = theme.grid.line.strokeWidth\n                ctx.strokeStyle = theme.grid.line.stroke\n\n                enableGridX &&\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: xScale,\n                        axis: 'x',\n                        values: gridXValues,\n                    })\n\n                enableGridY &&\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: yScale,\n                        axis: 'y',\n                        values: gridYValues,\n                    })\n            }\n\n            if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale,\n                    yScale,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            }\n\n            if (layer === 'areas' && enableArea === true) {\n                ctx.save()\n                ctx.globalAlpha = areaOpacity\n\n                areaGenerator.context(ctx)\n                series.forEach(serie => {\n                    ctx.fillStyle = serie.color\n                    ctx.beginPath()\n                    areaGenerator(serie.data.map(d => d.position))\n                    ctx.fill()\n                })\n\n                ctx.restore()\n            }\n\n            if (layer === 'lines') {\n                lineGenerator.context(ctx)\n                series.forEach(serie => {\n                    ctx.strokeStyle = serie.color\n                    ctx.lineWidth = lineWidth\n                    ctx.beginPath()\n                    lineGenerator(serie.data.map(d => d.position))\n                    ctx.stroke()\n                })\n            }\n\n            if (layer === 'points' && enablePoints === true && pointSize > 0) {\n                points.forEach(point => {\n                    ctx.fillStyle = point.color\n                    ctx.beginPath()\n                    ctx.arc(point.x, point.y, pointSize / 2, 0, 2 * Math.PI)\n                    ctx.fill()\n\n                    if (pointBorderWidth > 0) {\n                        ctx.strokeStyle = point.borderColor\n                        ctx.lineWidth = pointBorderWidth\n                        ctx.stroke()\n                    }\n                })\n            }\n\n            if (layer === 'mesh' && debugMesh === true) {\n                renderVoronoiToCanvas(ctx, voronoi)\n                if (currentPoint) {\n                    renderVoronoiCellToCanvas(ctx, voronoi, currentPoint.index)\n                }\n            }\n\n            if (layer === 'legends') {\n                const legendData = series\n                    .map(serie => ({\n                        id: serie.id,\n                        label: serie.id,\n                        color: serie.color,\n                    }))\n                    .reverse()\n\n                legends.forEach(legend => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data: legend.data || legendData,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        layers,\n        theme,\n        lineGenerator,\n        series,\n        xScale,\n        yScale,\n        enableGridX,\n        gridXValues,\n        enableGridY,\n        gridYValues,\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        legends,\n        points,\n        enablePoints,\n        pointSize,\n        currentPoint,\n    ])\n\n    const getPointFromMouseEvent = useCallback(\n        event => {\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            if (!isCursorInRect(margin.left, margin.top, innerWidth, innerHeight, x, y)) return null\n\n            const pointIndex = delaunay.find(x - margin.left, y - margin.top)\n            return points[pointIndex]\n        },\n        [canvasEl, margin, innerWidth, innerHeight, delaunay]\n    )\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            const point = getPointFromMouseEvent(event)\n            setCurrentPoint(point)\n\n            if (point) {\n                showTooltipFromEvent(createElement(tooltip, { point }), event)\n            } else {\n                hideTooltip()\n            }\n        },\n        [getPointFromMouseEvent, setCurrentPoint, showTooltipFromEvent, hideTooltip, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrentPoint(null)\n            currentPoint && onMouseLeave && onMouseLeave(currentPoint, event)\n        },\n        [hideTooltip, setCurrentPoint, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            if (onClick) {\n                const point = getPointFromMouseEvent(event)\n                point && onClick(point, event)\n            }\n        },\n        [getPointFromMouseEvent, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nLineCanvas.propTypes = LineCanvasPropTypes\nLineCanvas.defaultProps = LineCanvasDefaultProps\n\nconst LineCanvasWithContainer = withContainer(LineCanvas)\n\nexport default forwardRef((props, ref) => <LineCanvasWithContainer {...props} canvasRef={ref} />)\n", "/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { forwardRef } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport LineCanvas from './LineCanvas'\n\nconst ResponsiveLineCanvas = (props, ref) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <LineCanvas width={width} height={height} {...props} ref={ref} />}\n    </ResponsiveWrapper>\n)\n\nexport default forwardRef(ResponsiveLineCanvas)\n"],
  "mappings": "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",
  "names": ["collection", "collection", "precisionCutOffs", "date", "setMilliseconds", "setSeconds", "setMinutes", "setHours", "setDate", "setMonth", "precisionCutOffsByType", "millisecond", "second", "slice", "minute", "hour", "day", "month", "year", "createPrecisionMethod", "precision", "forEach", "cutOff", "createDateNormalizer", "_ref", "_ref$format", "format", "_ref$precision", "_ref$useUTC", "useUTC", "precisionFn", "value", "Date", "parseTime", "utcParse", "timeParse", "createLinearScale", "data", "size", "axis", "minValue", "_data$minStacked", "maxValue", "_data$maxStacked", "_ref$min", "min", "_ref$max", "max", "_ref$stacked", "stacked", "_ref$reverse", "reverse", "_ref$clamp", "clamp", "_ref$nice", "nice", "minStacked", "maxStacked", "scale", "scaleLinear", "rangeRound", "domain", "castLinearScale", "typedScale", "type", "createPointScale", "_spec", "scalePoint", "range", "all", "createBandScale", "_ref", "data", "size", "axis", "_ref$round", "round", "scale", "scaleBand", "range", "domain", "all", "castBandScale", "typedScale", "type", "createTimeScale", "minValue", "maxValue", "_ref$format", "format", "_ref$precision", "precision", "_ref$min", "min", "_ref$max", "max", "_ref$useUTC", "useUTC", "_ref$nice", "nice", "normalize", "createDateNormalizer", "scaleUtc", "scaleTime", "createLogScale", "sign", "_ref$base", "base", "some", "v", "Error", "hasMixedSign", "filter", "forEach", "Math", "scaleLog", "rangeRound", "createSymlogScale", "_ref$constant", "constant", "_ref$reverse", "reverse", "scaleSymlog", "getOtherAxis", "compareValues", "a", "b", "compareDateValues", "getTime", "computeScale", "spec", "createLinearScale", "createPointScale", "getDatumAxisPosition", "datum", "_scale", "stacked", "stackedValue", "computeXYScalesForSeries", "series", "xScaleSpec", "yScaleSpec", "width", "height", "nestedSeries", "map", "serie", "_extends", "d", "xy", "generateSeriesXY", "stackX", "stackY", "xScale", "x", "yScale", "y", "computedSeries", "position", "generateSeriesAxis", "scaleSpec", "_temp", "_ref$getValue", "getValue", "_ref$setValue", "setValue", "value", "parseFloat", "String", "parseTime", "values", "push", "sortBy", "uniq", "apply", "uniqBy", "slice", "sort", "last", "stackAxis", "otherAxis", "compare", "isDate", "stack", "find", "stackValue", "head", "minStacked", "maxStacked", "centerScale", "bandwidth", "offset", "timeByType", "millisecond", "timeMillisecond", "utcMillisecond", "second", "timeSecond", "utcSecond", "minute", "timeMinute", "utcMinute", "hour", "timeHour", "utcHour", "day", "timeInterval", "date", "setHours", "step", "setDate", "getDate", "start", "end", "floor", "setUTCHours", "setUTCDate", "getUTCDate", "week", "timeWeek", "utcWeek", "sunday", "timeSunday", "utcSunday", "monday", "timeMonday", "utcMonday", "tuesday", "timeTuesday", "utcTuesday", "wednesday", "timeWednesday", "utcWednesday", "thursday", "timeThursday", "utcThursday", "friday", "timeFriday", "utcFriday", "saturday", "timeSaturday", "utcSaturday", "month", "timeMonth", "utcMonth", "year", "timeYear", "utcYear", "timeTypes", "Object", "keys", "timeIntervalRegexp", "RegExp", "join", "getScaleTicks", "Array", "isArray", "matches", "match", "amount", "timeType", "_timeType$every$range", "_timeType$every", "_scale$domain", "originalStop", "stop", "Date", "every", "Number", "ticks", "interval", "isFinite", "computeCartesianTicks", "_ref", "translate", "axis", "scale", "ticksPosition", "tickValues", "tickSize", "tickPadding", "tickRotation", "truncateTickAt", "_ref$engine", "engine", "values", "getScaleTicks", "textProps", "textPropsByEngine", "position", "centerScale", "line", "lineX", "lineY", "text", "textX", "textY", "isRTL", "document", "dir", "textAlign", "align", "center", "textBaseline", "baseline", "d", "_position", "x", "y", "top", "bottom", "_position2", "left", "right", "ticks", "map", "value", "processedValue", "valueLength", "String", "length", "slice", "concat", "_extends", "key", "Date", "valueOf", "getFormatter", "format", "type", "formatter", "timeFormat", "d3Format", "computeGridLines", "_ref2", "width", "height", "_values", "Array", "isArray", "lines", "_position3", "_position4", "x1", "x2", "y1", "y2", "_position5", "_position6", "memoizedAxisTick", "memo", "_format", "_value", "onClick", "textAnchor", "animatedProps", "theme", "useTheme", "lineStyle", "textStyle", "props", "useMemo", "style", "opacity", "cursor", "event", "_jsxs", "animated", "g", "transform", "children", "_jsx", "outlineWidth", "dominantBaseline", "textTransform", "strokeWidth", "stroke", "outlineColor", "strokeLinejoin", "NonMemoizedAxis", "_ref$x", "_ref$y", "_ref$tickSize", "_ref$tickPadding", "_ref$tickRotation", "_ref$renderTick", "renderTick", "AxisTick", "legend", "_ref$legendPosition", "legendPosition", "_ref$legendOffset", "legendOffset", "ariaHidden", "legendTextStyle", "formatValue", "_computeCartesianTick", "legendNode", "legendX", "legendY", "legendRotation", "_Fragment", "_useMotionConfig", "useMotionConfig", "animate", "springConfig", "config", "useSpring", "lineX2", "lineY2", "immediate", "getAnimatedProps", "useCallback", "tick", "getFromAnimatedProps", "transition", "useTransition", "keys", "initial", "from", "enter", "update", "leave", "transitionProps", "_state", "tickIndex", "createElement", "rotate", "domain", "Axis", "axisPropTypes", "PropTypes", "oneOf", "oneOfType", "number", "arrayOf", "string", "instanceOf", "rotateOnTickLength", "shape", "angle", "func", "node", "bool", "axisPropType", "positions", "Axes", "xScale", "yScale", "axes", "isXAxis", "GridLine", "grid", "GridLines", "_createElement", "Grid", "xValues", "yValues", "xLines", "yLines", "renderAxisToCanvas", "ctx", "_theme$axis$domain$li", "save", "font", "fontWeight", "fontSize", "fontFamily", "lineWidth", "Number", "lineCap", "strokeStyle", "beginPath", "moveTo", "lineTo", "forEach", "_theme$axis$ticks$lin", "degreesToRadians", "lineJoin", "strokeText", "fill", "fillStyle", "fillText", "restore", "renderAxesToCanvas", "renderGridLinesToCanvas", "_ref3", "n", "i", "p", "x", "i2", "r", "j", "k", "e", "t", "a", "b", "pr", "l", "x", "r", "w", "h", "x", "i", "j", "n", "x", "t2", "t3", "x1", "y1", "x2", "h", "t", "v", "p", "S", "e", "V", "P", "k", "p", "i", "a", "b", "x", "r", "_", "j", "e", "f", "n", "collinear", "l", "t", "h", "t2", "getAccessor", "directive", "datum", "computeMeshPoints", "_ref", "points", "_ref$x", "x", "_ref$y", "y", "getX", "getY", "map", "point", "computeMesh", "_ref2", "width", "height", "debug", "delaunay", "Delaunay", "from", "voronoi", "useVoronoiMesh", "points2d", "useMemo", "Mesh", "_ref", "nodes", "width", "height", "x", "y", "onMouseEnter", "onMouseMove", "onMouseLeave", "onClick", "debug", "elementRef", "useRef", "_useState", "useState", "currentIndex", "setCurrentIndex", "_useVoronoiMesh", "useVoronoiMesh", "points", "delaunay", "voronoi", "voronoiPath", "useMemo", "render", "getIndexAndNodeFromEvent", "useCallback", "event", "current", "_getRelativeCursor", "getRelativeCursor", "index", "find", "handleMouseEnter", "_getIndexAndNodeFromE", "node", "handleMouseMove", "_getIndexAndNodeFromE2", "handleMouseLeave", "previousNode", "handleClick", "_getIndexAndNodeFromE3", "_jsxs", "ref", "children", "_Fragment", "_jsx", "d", "stroke", "strokeWidth", "opacity", "fill", "renderCell", "style", "cursor", "renderVoronoiToCanvas", "ctx", "save", "globalAlpha", "beginPath", "strokeStyle", "lineWidth", "restore", "renderVoronoiCellToCanvas", "fillStyle", "LinePointTooltip", "_ref", "point", "_jsx", "BasicTooltip", "id", "_jsxs", "children", "data", "xFormatted", "yFormatted", "enableChip", "color", "serieColor", "propTypes", "PropTypes", "object", "isRequired", "memo", "SliceTooltip", "slice", "axis", "theme", "useTheme", "otherAxis", "TableTooltip", "rows", "points", "map", "Chip", "style", "tooltip", "chip", "serieId", "tableCellValue", "oneOf", "commonPropTypes", "arrayOf", "shape", "oneOfType", "string", "number", "x", "instanceOf", "Date", "y", "xScale", "xFormat", "func", "yScale", "yFormat", "layers", "curve", "lineCurvePropType", "axisTop", "axisPropType", "axisRight", "axisBottom", "axisLeft", "enableGridX", "bool", "enableGridY", "gridXValues", "gridYValues", "enablePoints", "pointSymbol", "pointSize", "pointColor", "any", "pointBorderWidth", "pointBorderColor", "enablePointLabel", "pointLabel", "markers", "value", "colors", "ordinalColorsPropType", "enableArea", "areaOpacity", "areaBlendMode", "blendModePropType", "areaBaselineValue", "lineWidth", "legends", "LegendPropShape", "isInteractive", "debugMesh", "enableSlices", "debugSlices", "sliceTooltip", "enableCrosshair", "crosshairType", "LinePropTypes", "_extends", "role", "useMesh", "motionPropTypes", "defsPropTypes", "LineCanvasPropTypes", "pixelRatio", "commonDefaultProps", "type", "min", "max", "from", "scheme", "PointTooltip", "LineDefaultProps", "animate", "motionConfig", "defs", "fill", "LineCanvasDefaultProps", "window", "devicePixelRatio", "useLineGenerator", "useMemo", "line", "defined", "d", "curveFromProp", "useAreaGenerator", "_ref2", "area", "y1", "y0", "useSlices", "_ref4", "width", "height", "Map", "forEach", "has", "get", "push", "set", "Array", "entries", "sort", "a", "b", "_ref5", "i", "slices", "x0", "slicePoints", "prevSlice", "nextSlice", "reverse", "_ref6", "sliceHeight", "useLine", "_ref7", "_ref7$xScale", "xScaleSpec", "_ref7$yScale", "yScaleSpec", "_ref7$colors", "_ref7$curve", "_ref7$areaBaselineVal", "_ref7$pointColor", "_ref7$pointBorderColo", "_ref7$enableSlices", "enableSlicesTooltip", "formatX", "useValueFormatter", "formatY", "getColor", "useOrdinalColorScale", "getPointColor", "useInheritedColor", "getPointBorderColor", "_useState", "useState", "hiddenIds", "setHiddenIds", "_useMemo", "computeXYScalesForSeries", "filter", "item", "indexOf", "rawSeries", "series", "_useMemo2", "dataWithColor", "label", "datum", "find", "serie", "Boolean", "legendData", "hidden", "toggleSerie", "useCallback", "state", "concat", "_ref3", "reduce", "acc", "position", "index", "length", "borderColor", "lineGenerator", "areaGenerator", "AreaPath", "path", "_useMotionConfig", "useMotionConfig", "springConfig", "config", "animatedPath", "useAnimatedPath", "animatedProps", "useSpring", "immediate", "animated", "fillOpacity", "strokeWidth", "mixBlendMode", "Areas", "computedLines", "lines", "LinesItem", "thickness", "stroke", "Lines", "SlicesItem", "debug", "isCurrent", "setCurrent", "onMouseEnter", "onMouseMove", "onMouseLeave", "onClick", "_useTooltip", "useTooltip", "showTooltipFromEvent", "hideTooltip", "handleMouseEnter", "event", "createElement", "handleMouseMove", "handleMouseLeave", "handleClick", "strokeOpacity", "Slices", "current", "Points", "symbol", "size", "borderWidth", "enableLabel", "labelYOffset", "getLabel", "getLabelGenerator", "mappedPoints", "DotsItem", "Mesh", "margin", "showTooltipAt", "left", "top", "BaseMesh", "nodes", "Line", "props", "partialMargin", "pointLabelYOffset", "_useDimensions", "useDimensions", "innerWidth", "innerHeight", "outerWidth", "outerHeight", "_useLine", "currentPoint", "setCurrentPoint", "_useState2", "currentSlice", "setCurrentSlice", "layerById", "grid", "Grid", "xValues", "yValues", "CartesianMarkers", "axes", "Axes", "right", "bottom", "areas", "crosshair", "mesh", "legend", "BoxLegendSvg", "containerWidth", "containerHeight", "undefined", "boundDefs", "bindDefs", "Crosshair", "SvgWrapper", "layer", "Fragment", "defaultProps", "withContainer", "ResponsiveLine", "ResponsiveWrapper", "LineCanvas", "canvasRef", "canvasEl", "useRef", "_useVoronoiMesh", "useVoronoiMesh", "delaunay", "voronoi", "useEffect", "ctx", "getContext", "scale", "fillStyle", "background", "fillRect", "translate", "strokeStyle", "renderGridLinesToCanvas", "values", "renderAxesToCanvas", "save", "globalAlpha", "context", "beginPath", "restore", "arc", "Math", "PI", "renderVoronoiToCanvas", "renderVoronoiCellToCanvas", "renderLegendToCanvas", "getPointFromMouseEvent", "_getRelativeCursor", "getRelativeCursor", "isCursorInRect", "pointIndex", "handleMouseHover", "ref", "cursor", "LineCanvasWithContainer", "LineCanvas$1", "forwardRef"]
}
